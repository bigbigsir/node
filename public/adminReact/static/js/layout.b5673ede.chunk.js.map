{"version":3,"sources":["components/icons/CustomIcons.tsx","utils/icons.ts","components/Layout/index.module.scss","components/LangDropdown.tsx","assets/img/logo.svg","components/Layout/SettingDrawer/setting.module.scss","components/Layout/SettingDrawer/img/menu_in_left.svg","components/Layout/SettingDrawer/img/menu_in_head.svg","components/Layout/SettingDrawer/img/menu_in_left_full_head.svg","components/Layout/Menus.tsx","components/Layout/SiteLogo.tsx","components/Layout/Sider.tsx","components/Layout/Header/UserDropdown.tsx","components/Layout/Header/ComponentSizeDropdown.tsx","components/Layout/Header/index.tsx","components/Layout/SettingDrawer/index.tsx","components/Layout/index.tsx"],"names":["SizeSvg","viewBox","width","height","p-id","fill","d","LanguageSvg","Svg404","Icon404","props","component","SizeIcon","LanguageIcon","antIcons","iconsObj","customIcons","module","exports","LangDropdown","className","dispatch","useDispatch","locale","useSelector","state","langMenu","onClick","key","setLocale","style","minWidth","selectedKeys","label","icon","map","item","Item","role","aria-label","overlay","SubMenu","Menu","cx","classNames","bind","scss","Menus","mode","theme","collapsed","location","useLocation","history","useHistory","useState","openKeys","setOpenKeys","menus","userInfo","renderMenuItem","menu","AntIcon","path","id","name","renderSubMenu","title","onTitleClick","undefined","children","length","keys","some","filter","push","clickMenu","keyPath","slice","startsWith","useEffect","getPathParent","parent","i","pathname","inlineIndent","SiteLogo","sideWidth","menuLocation","collapsedWidth","src","require","alt","Sider","siderTheme","collapsible","trigger","UserDropdown","intl","useIntl","username","signOut","then","success","message","UserOutlined","formatMessage","SettingOutlined","Divider","LogoutOutlined","ComponentSizeDropdown","sizes","componentSize","sizeMenu","setComponentSize","placement","Index","headerTheme","assignLayoutConfig","toggleDrawerVisible","headerInnerClassName","Header","MenuUnfoldOutlined","MenuFoldOutlined","drawerVisible","contentWidthType","themeList","value","layoutList","img","closable","visible","onClose","size","onChange","v","Option","index","CheckOutlined","BasicLayout","localLayoutConfig","config","localStorage","getItem","JSON","parse","isObject","getLocalLayoutConfig","setDrawerVisible","fixedHeader","layoutConfig","setLayoutConfig","arg","payload","setItem","stringify","Content","SettingDrawer"],"mappings":"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","file":"static/js/layout.b5673ede.chunk.js","sourcesContent":["import React from 'react'\nimport Icon from '@ant-design/icons'\n\nconst SizeSvg = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2079\" fill=\"currentColor\">\n    <path\n      d=\"M920 416H616c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-56h60v320h-46c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h164c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-46V480h60v56c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V424c0-4.4-3.6-8-8-8z\"\n      p-id=\"18078\"/>\n    <path\n      d=\"M656 296V168c0-4.4-3.6-8-8-8H104c-4.4 0-8 3.6-8 8v128c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-64h168v560h-92c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-92V232h168v64c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8z\"\n      p-id=\"18079\"/>\n  </svg>\n)\n\nconst LanguageSvg = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2079\" fill=\"currentColor\">\n    <path\n      d=\"M708.336644 912.339898c-16.750499 9.184173-32.459273 19.464307-50.288337 27.570939-61.682851 26.50977-107.657952 35.154661-175.272909 35.154661-54.601572 0-122.755812-22.160719-171.426301-46.514383-7.045463-3.234671-32.459273-18.926048-37.347606-18.926048-5.3918 0-9.705036 4.331655-9.705036 10.280134 0 3.792373 1.078565 5.949502 4.313236 8.644891 45.435819 32.998555 149.823284 67.074651 207.157083 67.074651l45.435819 0c15.671934 0 33.537837-3.25309 49.209772-6.487761 51.402717-8.66331 105.465007-30.284747 149.284001-58.412364l21.639856 35.693944 29.187763-86.539982-85.444021-7.027044L708.336644 912.339898z\"\n      p-id=\"19192\"/>\n    <path d=\"M675.877371 516.41352 751.07605 539.130917 716.999954 416.357709Z\" p-id=\"19193\"></path>\n    <path\n      d=\"M196.681498 696.520527c17.829064-11.358699 47.053666-48.131207 56.794517-59.490929 28.110221-32.998555 52.984748-68.153216 72.467475-97.898681 3.773953 1.617847 34.616402 27.049053 42.739407 32.459273 8.088212 5.3918 40.008202 23.25668 47.053666 26.492374 7.009647 2.713808 33.537837 15.151072 34.616402 11.358699 1.078565-4.331655-4.888334-29.206182-8.124028-30.284747-3.234671-1.078565-67.613934-28.127617-76.816526-32.459273-7.54893-3.773953-25.953092-11.358699-34.616402-15.133675 24.335245-37.869492 39.504736-66.536392 41.661865-70.867024 3.773953-8.105608 29.727045-58.951647 30.302143-61.647035 0.539282-3.25309 1.078565-15.151072 0.539282-17.86488-0.539282-2.696412-9.741875 2.713808-22.717398 7.045463-13.012362 4.313236-37.347606 20.542872-47.053666 22.179139-9.202593 2.157129-39.504736 13.515828-55.17667 18.926048-15.708773 5.41022-44.896536 14.055111-56.794517 17.308201-11.897981 3.234671-22.717398 3.773953-29.223578 5.949502 0.539282 9.184173 2.732228 12.437264 2.732228 12.437264 1.617847 2.713808 8.088212 9.741875 15.133675 11.358699 7.584746 2.157129 20.022009 1.617847 25.413809 0 5.966898-1.078565 15.672958-5.949502 16.750499-8.105608 1.11438-2.174526-0.539282-8.66331 1.653663-10.819416 2.157129-1.635243 31.884175-8.66331 42.703591-11.897981 11.358699-3.792373 54.099129-18.404162 59.526745-17.847483-1.653663 6.487761-35.730783 74.642001-47.089481 95.184873-10.819416 20.561291-75.162864 110.335944-88.678692 126.026298-10.819416 12.437264-35.693944 43.261293-44.357254 49.767474C178.277336 699.773617 193.950294 698.138374 196.681498 696.520527z\"\n      p-id=\"19194\"/>\n    <path\n      d=\"M277.812283 388.769374c10.819416 0 24.335245-3.25309 32.459273-6.487761 8.088212-3.25309 21.60404-10.280134 27.031657-20.561291 1.078565-2.157129 3.773953-5.949502 2.157129-15.151072-1.617847-7.027044-5.931083-9.184173-11.358699-9.184173-5.3918 0.539282-21.639856 4.870938-29.762861 7.566326-7.54893 2.174526-24.335245 7.027044-31.344892 8.66331-7.045463 1.617847-22.717398-0.539282-24.874527-2.713808-2.192945-2.157129 2.696412 16.768919 9.165754 23.795962C263.182075 386.593825 272.922926 388.230092 277.812283 388.769374z\"\n      p-id=\"19195\"/>\n    <path\n      d=\"M847.87877 263.820618 847.87877 37.738509c0-7.027044-4.852518-11.358699-10.819416-11.358699-4.852518 0-341.270571 116.285446-345.081363 117.364011L190.175317 36.659945l0 207.695343c-45.975101 15.690354-78.973656 26.492374-80.59048 27.031657-3.234671 1.095961-7.584746 2.174526-10.819416 5.949502-1.078565 1.095961-1.617847 3.792373-2.157129 5.41022l0 583.061452c0 0.556679 0.539282 1.095961 0.539282 1.635243 1.617847 4.331655 5.427616 7.027044 9.740852 7.027044 5.3918 0 393.21257-130.897236 401.87588-134.671189 0 0 0.539282 0 418.626379 133.054365L927.390685 289.252847 847.87877 263.820618zM493.056556 730.921012 107.410312 859.850429 107.410312 286.902312 493.056556 157.418262 493.056556 730.921012zM507.649925 150.733003l330.304821-112.99347 0 219.055065L507.649925 150.733003zM788.927123 677.594479l-20.022009-73.024154L654.776797 569.415664l-24.335245 59.490929-55.17667-16.750499 116.860545-289.922089 54.06229 16.768919 97.9171 355.361497L788.927123 677.594479z\"\n      p-id=\"19196\"/>\n  </svg>\n)\n\nconst Svg404 = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2064\" fill=\"currentColor\">\n    <path\n      d=\"M973.557996 586.14612v79.591925c31.643248-60.647559 49.572023-128.348277 49.572022-199.87945C1023.130018 208.754206 794.070328 0.206249 511.664135 0.206249 229.26594 0.206249 0.206249 208.754206 0.206249 465.858595c0 3.222701 0.22391 6.445403 0.22391 9.6761l183.685976-207.540363h106.67701l-158.016321 217.408387h51.339311V430.192968l109.779759-155.753233v394.728927H184.116135V586.14612H17.463295c47.588822 162.206632 188.78792 289.547315 367.835765 331.058586-11.515359 26.389365-44.925895 90.067703-100.479508 101.351156-68.828263 14.106315 186.788726 3.422621 369.155233-105.381532 140.095543-36.87314 255.401075-126.740924 318.031836-244.005668h-108.004475V586.14612H680.09226V475.726618l183.909886-207.732286h104.02208l-155.369388 217.408387h51.347308v-59.440047l109.771763-155.153474v315.336922h-0.215913z m-625.667861 22.566905a84.094111 84.094111 0 0 1-7.96479-36.265385V356.446687c0-12.898802 2.65493-24.981932 7.96479-36.265385a93.242424 93.242424 0 0 1 21.695257-29.428141c9.068346-8.252674 19.911976-14.905993 32.306981-19.736047 12.395005-4.83805 25.669655-7.261074 39.839944-7.261074h90.29961c14.154296 0 27.436943 2.423024 39.831948 7.261074 12.171095 4.830054 22.790815 11.275456 31.875155 19.336208l-98.040491 130.371461v-23.174661a15.673684 15.673684 0 0 0-5.317857-12.091127c-3.542572-3.222701-7.96479-4.830054-13.27465-4.830053-5.317857 0-9.740075 1.607352-13.282647 4.830053a15.673684 15.673684 0 0 0-5.30986 12.091127v72.538768L354.97528 620.804153a84.413982 84.413982 0 0 1-7.085145-12.091128z m285.724855-36.265385c0 12.898802-2.65493 24.981932-7.972787 36.265385a93.242424 93.242424 0 0 1-21.68726 29.428141c-9.068346 8.252674-19.911976 14.905993-32.306981 19.744043-12.395005 4.830054-25.669655 7.253077-39.839944 7.253077H441.508408c-14.154296 0-27.436943-2.423024-39.831948-7.253077-12.395005-4.83805-23.238635-11.491369-32.314978-19.75204a99.879749 99.879749 0 0 1-11.06754-12.091127l109.771763-145.677293v50.979455c0 4.83805 1.775285 8.868426 5.317857 12.091128 3.534576 3.222701 7.96479 4.830054 13.274651 4.830053 5.30986 0 9.740075-1.607352 13.27465-4.830053a15.673684 15.673684 0 0 0 5.317857-12.091128V430.992645L607.721425 294.791533c7.301058 7.452996 13.27465 15.913587 17.704865 25.389769 5.30986 11.275456 7.96479 23.366583 7.96479 36.265385v216.000953h0.22391z\"\n      p-id=\"2191\"/>\n  </svg>\n)\n\nexport const Icon404: React.FC = props => <Icon component={Svg404} {...props} />\nexport const SizeIcon: React.FC = props => <Icon component={SizeSvg} {...props} />\nexport const LanguageIcon: React.FC = props => <Icon component={LanguageSvg} {...props} />\n","import * as iconsObj from '@ant-design/icons/lib/icons'\nimport * as customIcons from '@/components/icons/CustomIcons'\n\nconst antIcons: { [key: string]: any } = {\n  ...iconsObj,\n  ...customIcons\n}\n\nexport default antIcons\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__2iVCq\",\"layout__content\":\"Layout_layout__content__38jzE\",\"fixed\":\"Layout_fixed__2CGri\",\"follow\":\"Layout_follow__3dIOz\",\"sider\":\"Layout_sider__39SNp\",\"layout__sider-header\":\"Layout_layout__sider-header__2oukb\",\"menu\":\"Layout_menu__1Xj0Z\",\"no-padding\":\"Layout_no-padding__26nbg\",\"header\":\"Layout_header__24Bwz\",\"header__inner\":\"Layout_header__inner__2oubf\",\"z-index-3\":\"Layout_z-index-3__2xPV1\",\"header__center\":\"Layout_header__center__2hKu4\",\"header__right\":\"Layout_header__right__1F0rP\",\"header__action\":\"Layout_header__action__1gvbQ\",\"header__avatar\":\"Layout_header__avatar__12N4w\",\"header__username\":\"Layout_header__username__2SzYA\",\"header__menu-fold\":\"Layout_header__menu-fold__36Xul\",\"dark\":\"Layout_dark__3a_I6\",\"light\":\"Layout_light__2jJBP\",\"site\":\"Layout_site__iv3dh\",\"site__icon\":\"Layout_site__icon__dRWEg\",\"site__title\":\"Layout_site__title__EmqEi\"};","import React from 'react'\nimport { Dropdown, Menu } from 'antd'\nimport { setLocale } from '@/store/actions/common'\nimport { Locale, State } from '@/store/types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClickParam } from 'antd/es/menu'\nimport { LanguageIcon } from '@/components/icons/CustomIcons'\n\ninterface Props {\n  className?: string;\n}\n\ninterface Language {\n  key: Locale\n  icon: string\n  label: string\n}\n\nconst LangDropdown: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch()\n  const languages: Language[] = [\n    {\n      key: 'zh-CN',\n      label: '简体中文',\n      icon: '🇨🇳'\n    },\n    {\n      key: 'zh-TW',\n      label: '繁体中文',\n      icon: '🇭🇰'\n    },\n    {\n      key: 'en-US',\n      label: 'English',\n      icon: '🇺🇸'\n    }\n  ]\n  const locale = useSelector<State, Locale>(state => state.locale)\n  const changeLang = ({ key }: ClickParam): any => dispatch(setLocale(key as Locale))\n  const langMenu = (\n    <Menu onClick={changeLang} style={{ minWidth: 160 }} selectedKeys={[locale]}>\n      {languages.map((item) => (\n        <Menu.Item key={item.key}>\n          <span role=\"img\" aria-label={item.label}>\n            {item.icon}\n          </span>\n          <span>\n            &nbsp;{item.label}\n          </span>\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n  return (\n    <Dropdown overlay={langMenu}>\n      <span className={className}>\n        <LanguageIcon/>\n      </span>\n    </Dropdown>\n  )\n}\n\nexport default LangDropdown\n","module.exports = __webpack_public_path__ + \"static/media/logo.15fdda66.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting__title\":\"setting_setting__title__38oi3\",\"setting__checkbox\":\"setting_setting__checkbox__uZ9VB\",\"setting__checkbox-item\":\"setting_setting__checkbox-item__7-V21\",\"setting__checkbox-img\":\"setting_setting__checkbox-img__3mNqg\",\"setting__icon-checked\":\"setting_setting__icon-checked__3C4XF\",\"setting__nav\":\"setting_setting__nav__1yyuw\",\"setting__nav-item\":\"setting_setting__nav-item__1zg-3\"};","module.exports = __webpack_public_path__ + \"static/media/menu_in_left.d0efa020.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu_in_head.f80ad184.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu_in_left_full_head.050e8944.svg\";","import React, { useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport { MenuItem, State } from '@/store/types'\nimport antIcons from '@/utils/icons'\nimport { Menu } from 'antd'\nimport { ClickParam } from 'antd/es/menu'\nimport classNames from 'classnames/bind'\nimport { Theme } from '@/components/Layout/index'\nimport scss from './index.module.scss'\n\nconst { SubMenu } = Menu\nconst cx = classNames.bind(scss)\n\ninterface MenusProps {\n  mode: 'vertical' | 'horizontal' | 'inline'\n  theme: Theme\n  collapsed: boolean\n  className?: string\n}\n\nconst Menus: React.FC<MenusProps> = (props) => {\n  const { mode, theme, collapsed, className } = props\n  const location = useLocation()\n  const history = useHistory()\n  const [openKeys, setOpenKeys] = useState<string[]>([])\n  const menus = useSelector<State, MenuItem[]>(state => state.userInfo.menus || [])\n\n  useEffect(getDefaultOpenKeys, [menus, location])\n\n  function getDefaultOpenKeys() {\n    const key = getPathParent(menus)\n    if (key) setOpenKeys([...openKeys, key])\n  }\n\n  function renderMenuItem(menu: MenuItem): React.ReactNode {\n    const AntIcon = menu.icon && antIcons[menu.icon]\n    return (\n      <Menu.Item key={menu.path || menu.id}>\n        {menu.icon && <AntIcon/>}\n        <span>{menu.name}</span>\n      </Menu.Item>\n    )\n  }\n\n  function renderSubMenu(menu: MenuItem): React.ReactNode {\n    const AntIcon = menu.icon && antIcons[menu.icon]\n    return (\n      <SubMenu\n        key={menu.id}\n        title={menu.name}\n        icon={menu.icon && <AntIcon/>}\n        onTitleClick={collapsed ? undefined : onTitleClick}\n      >\n        {\n          menu.children.map(menu => (\n            menu.children.length ? renderSubMenu(menu) : renderMenuItem(menu)\n          ))\n        }\n      </SubMenu>\n    )\n  }\n\n  function getPathParent(menus: MenuItem[]): any {\n    let parent\n    for (let i = menus.length; i--;) {\n      if (menus[i].children.length) {\n        parent = getPathParent(menus[i].children)\n      } else if (menus[i].path === location.pathname) {\n        parent = menus[i].parent\n      }\n      if (parent) return parent\n    }\n  }\n\n  function onTitleClick({ key }: any) {\n    let keys = [...openKeys]\n    const isExist = keys.some(item => item === key)\n    if (isExist) {\n      keys = keys.filter(item => item !== key)\n    } else {\n      keys.push(key)\n    }\n    setOpenKeys(keys)\n  }\n\n  function clickMenu({ key, keyPath }: ClickParam) {\n    setOpenKeys(keyPath.slice(1))\n    key.startsWith('/') && history.push(key)\n  }\n\n  return collapsed\n    ? <Menu\n      theme={theme}\n      mode={mode}\n      inlineIndent={16}\n      onClick={clickMenu}\n      selectedKeys={[location.pathname]}\n      className={cx('menu', className)}\n    >\n      {\n        menus.map((menu) => (\n          menu.children.length ? renderSubMenu(menu) : renderMenuItem(menu)\n        ))\n      }\n    </Menu>\n    : <Menu\n      theme={theme}\n      mode={mode}\n      inlineIndent={16}\n      onClick={clickMenu}\n      openKeys={openKeys}\n      selectedKeys={[location.pathname]}\n      className={cx('menu', className)}\n    >\n      {\n        menus.map((menu) => (\n          menu.children.length ? renderSubMenu(menu) : renderMenuItem(menu)\n        ))\n      }\n    </Menu>\n}\n\nexport default Menus\n","import React from 'react'\nimport classNames from 'classnames/bind'\nimport scss from './index.module.scss'\nimport { LayoutConfig, SiderWidth, Theme } from '@/components/Layout/index'\n\nconst cx = classNames.bind(scss)\n\ninterface SiteLogoProps extends LayoutConfig {\n  theme: Theme\n  sideWidth: SiderWidth\n}\n\nconst SiteLogo: React.FC<SiteLogoProps> = (props) => {\n  const {\n    theme,\n    sideWidth,\n    collapsed,\n    menuLocation\n  } = props\n  const width = !collapsed || menuLocation === 'top' ? sideWidth.width : sideWidth.collapsedWidth\n  return (\n    <div style={{ width }} className={cx('site', theme)}>\n      <img className={cx('site__icon')} src={require('@/assets/img/logo.svg')} alt=\"\"/>\n      {\n        (!collapsed || menuLocation === 'top') &&\n        <span className={cx('site__title')}>Ant Design Pro</span>\n      }\n    </div>\n  )\n}\n\nexport default SiteLogo\n","import React from 'react'\nimport { Layout } from 'antd'\nimport classNames from 'classnames/bind'\nimport Menus from '@/components/Layout/Menus'\nimport SiteLogo from '@/components/Layout/SiteLogo'\nimport { LayoutConfig, SiderWidth } from '@/components/Layout/index'\nimport scss from './index.module.scss'\n\ninterface SiderProps extends LayoutConfig {\n  sideWidth: SiderWidth\n}\n\nconst cx = classNames.bind(scss)\n\nconst Sider: React.FC<SiderProps> = (props) => {\n  const { sideWidth, siderTheme, collapsed, menuLocation } = props\n  return (\n    <Layout.Sider\n      collapsible\n      trigger={null}\n      theme={siderTheme}\n      collapsed={collapsed}\n      width={sideWidth.width}\n      collapsedWidth={sideWidth.collapsedWidth}\n      className={cx('sider')}\n    >\n      <SiteLogo {...props} theme={siderTheme}/>\n      <Menus\n        mode={'inline'}\n        collapsed={collapsed}\n        theme={siderTheme}\n        className={cx({ 'no-padding': menuLocation === 'mix' })}/>\n    </Layout.Sider>\n  )\n}\nexport default Sider\n","import React from 'react'\nimport {\n  UserOutlined,\n  LogoutOutlined,\n  SettingOutlined\n} from '@ant-design/icons'\nimport classNames from 'classnames/bind'\nimport { useHistory } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { State } from '@/store/types'\nimport { ClickParam } from 'antd/es/menu'\nimport { ResponseData } from '@/api/types'\nimport { signOut } from '@/store/actions/user'\nimport { Avatar, Dropdown, Menu, message } from 'antd'\nimport { useIntl } from 'react-intl'\nimport scss from '../index.module.scss'\n\nconst cx = classNames.bind(scss)\n\nconst UserDropdown: React.FC = () => {\n  const intl = useIntl()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const username = useSelector<State, string | undefined>(state => state.userInfo.username)\n\n  function logout({ key }: ClickParam) {\n    if (key === 'logout') {\n      dispatch<Promise<ResponseData>>(signOut()).then(({ success }) => {\n        if (success) {\n          message.success('退出成功')\n          history.push('/user/login')\n        }\n      })\n    }\n  }\n\n  const menu = (\n    <Menu onClick={logout} style={{ minWidth: 160 }}>\n      <Menu.Item key=\"center\">\n        <UserOutlined/>\n        <span>\n          {intl.formatMessage({ id: 'layout.userDropdown.center' })}\n        </span>\n      </Menu.Item>\n      <Menu.Item key=\"setting\">\n        <SettingOutlined/>\n        <span>\n          {intl.formatMessage({ id: 'layout.userDropdown.setting' })}\n        </span>\n      </Menu.Item>\n      <Menu.Divider/>\n      <Menu.Item key=\"logout\">\n        <LogoutOutlined/>\n        <span>\n          {intl.formatMessage({ id: 'layout.userDropdown.logout' })}\n        </span>\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <Dropdown overlay={menu}>\n      <span className={cx('header__action')}>\n        <Avatar icon={<UserOutlined/>} className={cx('header__avatar')}/>\n        <span className={cx('header__username')}>{username}</span>\n      </span>\n    </Dropdown>\n  )\n}\n\nexport default UserDropdown\n","import React from 'react'\nimport { Dropdown, Menu } from 'antd'\nimport { ClickParam } from 'antd/es/menu'\nimport { ComponentSize, State } from '@/store/types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SizeIcon } from '@/components/icons/CustomIcons'\nimport { setComponentSize } from '@/store/actions/common'\nimport { useIntl } from 'react-intl'\n\ninterface Props {\n  className?: string;\n}\n\ninterface SizeItem {\n  key: ComponentSize\n  label: string\n}\n\nconst ComponentSizeDropdown: React.FC<Props> = ({ className }) => {\n  const intl = useIntl()\n  const dispatch = useDispatch()\n  const sizes: SizeItem[] = [\n    {\n      key: 'small',\n      label: intl.formatMessage({ id: 'layout.componentSizeDropdown.small' })\n    },\n    {\n      key: 'middle',\n      label: intl.formatMessage({ id: 'layout.componentSizeDropdown.middle' })\n    },\n    {\n      key: 'large',\n      label: intl.formatMessage({ id: 'layout.componentSizeDropdown.large' })\n    }\n  ]\n  const componentSize = useSelector<State, ComponentSize>(state => state.componentSize)\n  const changeLang = ({ key }: ClickParam): any => dispatch(setComponentSize(key as ComponentSize))\n  const sizeMenu = (\n    <Menu onClick={changeLang} style={{ minWidth: 160 }} selectedKeys={[componentSize]}>\n      {sizes.map((item) => (\n        <Menu.Item key={item.key}>\n          <span>\n            {item.label}\n          </span>\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n  return (\n    <Dropdown overlay={sizeMenu} placement=\"bottomLeft\">\n      <span className={className}>\n        <SizeIcon/>\n      </span>\n    </Dropdown>\n  )\n}\n\nexport default ComponentSizeDropdown\n","import React from 'react'\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  SettingOutlined\n} from '@ant-design/icons'\nimport { Layout } from 'antd'\nimport classNames from 'classnames/bind'\nimport Menus from '@/components/Layout/Menus'\nimport SiteLogo from '@/components/Layout/SiteLogo'\nimport LangDropdown from '@/components/LangDropdown'\nimport UserDropdown from './UserDropdown'\nimport ComponentSizeDropdown from './ComponentSizeDropdown'\nimport { LayoutConfig, Payload, SiderWidth } from '@/components/Layout/index'\nimport scss from '../index.module.scss'\n\ninterface HeaderProps extends LayoutConfig {\n  sideWidth: SiderWidth\n  toggleDrawerVisible: (arg: boolean) => void\n  assignLayoutConfig: (payload: Payload) => void\n}\n\nconst cx = classNames.bind(scss)\n\nconst Index: React.FC<HeaderProps> = (props) => {\n  const {\n    collapsed,\n    headerTheme,\n    menuLocation,\n    assignLayoutConfig,\n    toggleDrawerVisible\n  } = props\n  const headerInnerClassName = cx('header__inner', 'fixed', {\n    'z-index-3': menuLocation === 'mix'\n  })\n  return (\n    <Layout.Header className={cx('header', headerTheme)}>\n      <div className={headerInnerClassName}>\n        <SiteLogo {...props} theme={headerTheme}/>\n        {\n          menuLocation !== 'top' &&\n          <span className={cx('header__action')}\n            onClick={() => assignLayoutConfig({ collapsed: !collapsed })}>\n            {collapsed ? <MenuUnfoldOutlined/> : <MenuFoldOutlined/>}\n          </span>\n        }\n        <div className={cx('header__center')}>\n          {\n            menuLocation === 'top' &&\n            <Menus mode={'horizontal'} collapsed={true} theme={headerTheme}/>\n          }\n        </div>\n        <div className={cx('header__right')}>\n          <ComponentSizeDropdown className={cx('header__action')}/>\n          <LangDropdown className={cx('header__action')}/>\n          <span onClick={() => toggleDrawerVisible(true)} className={cx('header__action')}>\n            <SettingOutlined/>\n          </span>\n          <UserDropdown/>\n        </div>\n      </div>\n    </Layout.Header>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport { Drawer, Tooltip, Select, Divider } from 'antd'\nimport classNames from 'classnames/bind'\nimport { CheckOutlined } from '@ant-design/icons'\nimport { LayoutConfig, Payload, MenuLocation, Theme } from '@/components/Layout'\nimport scss from './setting.module.scss'\nimport { useIntl } from 'react-intl'\n\nconst cx = classNames.bind(scss)\n\ninterface Props extends LayoutConfig {\n  drawerVisible: boolean\n  toggleDrawerVisible: (payload: boolean) => void\n  assignLayoutConfig: (payload: Payload) => void\n}\n\ninterface ThemeItem {\n  value: Theme\n  label: string\n}\n\ninterface LayoutItem {\n  img: string\n  title: string\n  key: MenuLocation\n}\n\nconst Index: React.FC<Props> = (props) => {\n  const intl = useIntl()\n  const {\n    siderTheme,\n    headerTheme,\n    menuLocation,\n    drawerVisible,\n    contentWidthType,\n    assignLayoutConfig,\n    toggleDrawerVisible\n  } = props\n\n  const themeList: ThemeItem[] = [\n    {\n      value: 'dark',\n      label: intl.formatMessage({ id: 'layout.settingDrawer.dark' })\n    }, {\n      value: 'light',\n      label: intl.formatMessage({ id: 'layout.settingDrawer.light' })\n    }\n  ]\n  const layoutList: LayoutItem[] = [\n    {\n      key: 'left',\n      title: intl.formatMessage({ id: 'layout.settingDrawer.sideMenuLayout' }),\n      img: require('./img/menu_in_left.svg')\n    }, {\n      key: 'top',\n      title: intl.formatMessage({ id: 'layout.settingDrawer.topMenuLayout' }),\n      img: require('./img/menu_in_head.svg')\n    }, {\n      key: 'mix',\n      title: intl.formatMessage({ id: 'layout.settingDrawer.mixMenuLayout' }),\n      img: require('./img/menu_in_left_full_head.svg')\n    }\n  ]\n\n  function onClose() {\n    toggleDrawerVisible(false)\n  }\n\n  return (\n    <Drawer\n      placement=\"right\"\n      closable={true}\n      visible={drawerVisible}\n      onClose={onClose}\n    >\n      <div className={cx('setting')}>\n        <h3 className={cx('setting__title')}>\n          {intl.formatMessage({ id: 'layout.settingDrawer.themeColor' })}\n        </h3>\n        <div className={cx('setting__nav')}>\n          <div className={cx('setting__nav-item')}>\n            <span>\n              {intl.formatMessage({ id: 'layout.settingDrawer.themeHeader' })}\n            </span>\n            <Select\n              size=\"small\"\n              value={headerTheme}\n              style={{ width: 80 }}\n              onChange={v => assignLayoutConfig({ headerTheme: v })}>\n              {\n                themeList.map(item => (\n                  <Select.Option value={item.value} key={item.value}>\n                    {item.label}\n                  </Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n          <div className={cx('setting__nav-item')}>\n            <span>\n              {intl.formatMessage({ id: 'layout.settingDrawer.themeSide' })}\n            </span>\n            <Select\n              size=\"small\"\n              value={siderTheme}\n              style={{ width: 80 }}\n              onChange={v => assignLayoutConfig({ siderTheme: v })}\n            >\n              {\n                themeList.map(item => (\n                  <Select.Option value={item.value} key={item.value}>\n                    {item.label}\n                  </Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n        </div>\n        <Divider/>\n        <h3 className={cx('setting__title')}>\n          {intl.formatMessage({ id: 'layout.settingDrawer.navigationMode' })}\n        </h3>\n        <div className={cx('setting__checkbox')}>\n          {\n            layoutList.map((item, index) => (\n              <Tooltip key={index} title={item.title}>\n                <div onClick={() => assignLayoutConfig({ menuLocation: item.key })}\n                  className={cx('setting__checkbox-item')}>\n                  <img src={item.img} alt=\"\"/>\n                  {\n                    item.key === menuLocation &&\n                    <span className={cx('setting__icon-checked')}>\n                      <CheckOutlined/>\n                    </span>\n                  }\n                </div>\n              </Tooltip>\n            ))\n          }\n        </div>\n        <div className={cx('setting__nav')}>\n          <div className={cx('setting__nav-item')}>\n            <span>\n              {intl.formatMessage({ id: 'layout.settingDrawer.contentWidth' })}\n            </span>\n            <Select\n              size=\"small\"\n              value={contentWidthType}\n              style={{ width: 80 }}\n              onChange={v => assignLayoutConfig({ contentWidthType: v })}>\n              <Select.Option value=\"fluid\">\n                {intl.formatMessage({ id: 'layout.settingDrawer.fluid' })}\n              </Select.Option>\n              <Select.Option value=\"fixed\">\n                {intl.formatMessage({ id: 'layout.settingDrawer.fixed' })}\n              </Select.Option>\n            </Select>\n          </div>\n        </div>\n      </div>\n    </Drawer>\n  )\n}\n\nexport default Index\n","import React, { useEffect, useState } from 'react'\nimport { Layout } from 'antd'\nimport classNames from 'classnames/bind'\nimport Sider from './Sider'\nimport Header from './Header'\nimport SettingDrawer from './SettingDrawer'\nimport { isObject } from '@/utils/util'\nimport scss from './index.module.scss'\n\nconst cx = classNames.bind(scss)\n\nexport type Theme = 'dark' | 'light'\nexport type MenuLocation = 'left' | 'top' | 'mix'\nexport type ContentWidthType = 'fluid' | 'fixed'\n\nexport interface Payload {\n  collapsed?: boolean\n  siderTheme?: Theme\n  headerTheme?: Theme\n  fixedHeader?: boolean\n  menuLocation?: MenuLocation\n  contentWidthType?: ContentWidthType\n}\n\nexport interface SiderWidth {\n  width: number,\n  collapsedWidth: number\n}\n\nexport interface LayoutConfig {\n  collapsed: boolean\n  siderTheme: Theme\n  headerTheme: Theme\n  fixedHeader: boolean\n  menuLocation: MenuLocation\n  contentWidthType: ContentWidthType\n}\n\nconst BasicLayout: React.FC = ({ children }) => {\n  const localLayoutConfig = getLocalLayoutConfig()\n  const [drawerVisible, setDrawerVisible] = useState(false)\n  const [layoutConfig, setLayoutConfig] = useState<LayoutConfig>({\n    collapsed: false,\n    siderTheme: 'dark',\n    headerTheme: 'light',\n    fixedHeader: true,\n    menuLocation: 'left',\n    contentWidthType: 'fluid',\n    ...localLayoutConfig\n  })\n  const sideWidth: SiderWidth = {\n    width: 210,\n    collapsedWidth: 48\n  }\n  const { menuLocation, contentWidthType } = layoutConfig\n\n  useEffect(() => {\n    localStorage.setItem('layoutConfig', JSON.stringify(layoutConfig))\n  }, [layoutConfig])\n\n  function getLocalLayoutConfig() {\n    let config = localStorage.getItem('layoutConfig')\n    config = config && JSON.parse(config)\n    return isObject(config) ? config : {}\n  }\n\n  function toggleDrawerVisible(arg: boolean) {\n    setDrawerVisible(arg)\n  }\n\n  function assignLayoutConfig(payload: Payload): void {\n    setLayoutConfig(state => ({\n      ...state,\n      ...payload\n    }))\n  }\n\n  return (\n    <Layout className={cx('layout')}>\n      {\n        (menuLocation === 'left' || menuLocation === 'mix') &&\n        <Sider {...layoutConfig} sideWidth={sideWidth}/>\n      }\n      <Layout className={cx('layout__layout')}>\n        <Header\n          {...layoutConfig}\n          sideWidth={sideWidth}\n          assignLayoutConfig={assignLayoutConfig}\n          toggleDrawerVisible={toggleDrawerVisible}/>\n        <Layout.Content className={cx('layout__content', contentWidthType)}>\n          {children}\n        </Layout.Content>\n      </Layout>\n      <SettingDrawer\n        {...layoutConfig}\n        drawerVisible={drawerVisible}\n        assignLayoutConfig={assignLayoutConfig}\n        toggleDrawerVisible={toggleDrawerVisible}/>\n    </Layout>\n  )\n}\n\nexport default BasicLayout\n"],"sourceRoot":""}