{"version":3,"sources":["views/user/user.module.scss","components/RequiredTips.tsx","utils/validate.ts","views/user/login.tsx"],"names":["module","exports","Required","labelId","id","values","label","usernameReg","passwordReg","emailReg","cx","classNames","bind","scss","Login","intl","useIntl","history","useHistory","dispatch","useDispatch","cacheUsername","localStorage","getItem","useState","loading","setLoading","sessionStorage","checkCaptcha","setCheckCaptcha","remember","setRemember","errorMessage","setErrorMessage","captchaImg","setCaptchaImg","Form","useForm","form","initialValues","username","password","captcha","captchaId","usernameRule","required","message","pattern","passwordRule","captchaRule","onFinish","encrypted","_isShowErrorTips","signIn","then","success","msg","replace","setItem","removeItem","setRememberUser","formatMessage","getCaptchaImg","getCaptcha","_isNeedLoading","data","image","setFieldsValue","useEffect","className","name","size","v","Item","type","showIcon","rules","maxLength","placeholder","prefix","Password","visibilityToggle","onPressEnter","submit","span","noStyle","onClick","dangerouslySetInnerHTML","__html","href","checked","onChange","e","target","style","float","htmlType","block","push"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,4BAA4B,YAAc,0BAA0B,WAAa,yBAAyB,OAAS,qBAAqB,cAAgB,4BAA4B,aAAe,2BAA2B,iBAAmB,+BAA+B,OAAS,qBAAqB,kBAAoB,gCAAgC,cAAgB,4BAA4B,aAAe,2BAA2B,gBAAkB,8BAA8B,uBAAuB,mCAAmC,eAAiB,6BAA6B,2BAA2B,uCAAuC,4BAA4B,wCAAwC,gCAAgC,4CAA4C,4BAA4B,wCAAwC,2BAA2B,uCAAuC,QAAU,sBAAsB,UAAY,wBAAwB,OAAS,qBAAqB,0BAA0B,wC,gCCDhmC,4BASeC,IANiC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjD,OACE,kBAAC,IAAD,CAAkBC,GAAI,WAAYC,OAAQ,CAAEC,MAAO,kBAAC,IAAD,CAAkBF,GAAID,S,gCCL7E,sGAAO,IAAMI,EAAsB,mBACtBC,EAAc,8BACdC,EAAW,yD,kMCiBlBC,EAAKC,IAAWC,KAAKC,KA4KZC,UAnKS,WACtB,IAAMC,EAAOC,cACPC,EAAUC,uBACVC,EAAWC,cACXC,EAAwBC,aAAaC,QAAQ,mBAAqB,GAJ5C,EAKEC,oBAAkB,GALpB,mBAKrBC,EALqB,KAKZC,EALY,OAMYF,qBAAoBG,eAAeJ,QAAQ,iBANvD,mBAMrBK,EANqB,KAMPC,EANO,OAOIL,qBAAoBH,GAPxB,mBAOrBS,EAPqB,KAOXC,EAPW,OAQYP,mBAAiB,IAR7B,mBAQrBQ,EARqB,KAQPC,EARO,OASQT,mBAAiB,IATzB,mBASrBU,EATqB,KASTC,EATS,OAUbC,OAAKC,UAAbC,EAVqB,oBAWtBC,EAA8B,CAClCC,SAAUnB,GAAiB,GAC3BoB,SAAU,GACVC,QAAS,GACTC,UAAW,IAEPC,EAAuB,CAC3B,CACEC,UAAU,EACVC,QAAS,kBAAC,IAAD,CAAU3C,QAAS,yBAE9B,CACE4C,QAASxC,IACTuC,QAAS,kBAAC,IAAD,CAAkB1C,GAAI,6BAG7B4C,EAAuB,CAC3B,CACEH,UAAU,EACVC,QAAS,kBAAC,IAAD,CAAU3C,QAAS,yBAE9B,CACE4C,QAASvC,IACTsC,QAAS,kBAAC,IAAD,CAAkB1C,GAAI,6BAG7B6C,EAAsB,CAC1B,CACEJ,SAAUjB,EACVkB,QAAS,kBAAC,IAAD,CAAU3C,QAAS,yBAMhC,SAAS+C,EAAS7C,GAChBA,EAAM,2BACDA,GADC,IAEJoC,SAAUU,YAAU9C,EAAOoC,UAC3BW,kBAAkB,IAEpB1B,GAAW,GACXO,EAAgB,IAChBd,EAAgCkC,YAAOhD,IAASiD,MAAK,YAAgC,IAA7BC,EAA4B,EAA5BA,QAAkBC,EAAU,EAAnBV,QAC/DpB,GAAW,GACP6B,GACFtC,EAAQwC,QAAQ,KAatB,SAAyB3B,EAAmBU,GACtCV,EACFR,aAAaoC,QAAQ,iBAAkBlB,GAEvClB,aAAaqC,WAAW,kBAhBtBC,CAAgB9B,EAAUzB,EAAOmC,UACjCb,eAAegC,WAAW,gBAC1Bb,UAAQS,QAAQxC,EAAK8C,cAAc,CAAEzD,GAAI,0BAEzC0D,IACA7B,EAAgBuB,GAChB3B,GAAgB,GAChBF,eAAe+B,QAAQ,eAAgB,YAa7C,SAASI,IACFlC,GACLmC,qBAAW,CAAEC,gBAAgB,IAASV,MAAK,YAAwB,IAArBW,EAAoB,EAApBA,KAAoB,EAAdV,UAEhDpB,EAAc8B,EAAKC,OACnB5B,EAAK6B,eAAe,CAAExB,UAAWsB,EAAKtB,gBAK5C,OA5CAyB,oBAAUN,EAAe,CAAClC,IA6CxB,yBAAKyC,UAAW3D,EAAG,UACjB,wBAAI2D,UAAW3D,EAAG,gBACfK,EAAK8C,cAAc,CAAEzD,GAAI,sBAE5B,kBAAC,OAAD,CACEkE,KAAK,QACLC,KAAK,QACLjC,KAAMA,EACNC,cAAeA,EACfW,SAAU,SAAAsB,GAAC,OAAItB,EAASsB,KAGtBxC,GACA,kBAAC,OAAKyC,KAAN,CAAWJ,UAAU,QACnB,kBAAC,QAAD,CAAOvB,QAASd,EAAc0C,KAAK,QAAQC,UAAQ,KAGvD,kBAAC,OAAKF,KAAN,CAAWH,KAAK,WAAWM,MAAOhC,GAChC,kBAAC,QAAD,CAAOiC,UAAW,GAAIC,YAAa/D,EAAK8C,cAAc,CAAEzD,GAAI,wBAC1D2E,OAAQ,kBAAC,eAAD,SAEZ,kBAAC,OAAKN,KAAN,CAAWH,KAAK,WAAWM,MAAO5B,GAChC,kBAAC,QAAMgC,SAAP,CACEH,UAAW,GACXI,kBAAkB,EAClBC,aAAc,kBAAM5C,EAAK6C,UACzBJ,OAAQ,kBAAC,eAAD,MACRD,YAAa/D,EAAK8C,cAAc,CAAEzD,GAAI,2BAIxCwB,GACA,kBAAC,OAAK6C,KAAN,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKW,KAAM,IACT,kBAAC,OAAKX,KAAN,CAAWH,KAAK,UAAUM,MAAO3B,EAAaoC,SAAO,GACnD,kBAAC,QAAD,CAAOR,UAAW,EAAGC,YAAa/D,EAAK8C,cAAc,CAAEzD,GAAI,uBACzD2E,OAAQ,kBAAC,4BAAD,UAGd,kBAAC,MAAD,CAAKK,KAAM,GACT,uBAAGE,QAASxB,EAAeyB,wBAAyB,CAAEC,OAAQtD,GAC5DmC,UAAW3D,EAAG,kBACd+E,KAAK,4BAKf,yBAAKpB,UAAW3D,EAAG,oBACjB,kBAAC,WAAD,CAAUgF,QAAS5D,EAAU6D,SAAU,SAACC,GAAD,OAAO7D,EAAY6D,EAAEC,OAAOH,UAAUpB,KAAK,YAC/EvD,EAAK8C,cAAc,CAAEzD,GAAI,yBAE5B,uBAAG0F,MAAO,CAAEC,MAAO,SAAWN,KAAK,wBAChC1E,EAAK8C,cAAc,CAAEzD,GAAI,gCAG9B,kBAAC,OAAKqE,KAAN,CAAWH,KAAK,YAAYe,SAAO,GACjC,kBAAC,QAAD,CAAOH,aAAc,kBAAM5C,EAAK6C,UAAUT,KAAK,YAEjD,kBAAC,OAAKD,KAAN,KACE,kBAAC,SAAD,CAAQhD,QAASA,EAASiD,KAAK,UAAUsB,SAAS,SAASC,OAAK,GAC7DlF,EAAK8C,cAAc,CAAEzD,GAAI,wBAIhC,uBAAGiE,UAAW3D,EAAG,yBACf,uBAAG4E,QAAS,kBAAMrE,EAAQiF,KAAK,mBAAmBT,KAAK,wBACpD1E,EAAK8C,cAAc,CAAEzD,GAAI","file":"static/js/login.4541c642.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user_user__19OoE\",\"user__content\":\"user_user__content__1JwNP\",\"user__title\":\"user_user__title__1WWu5\",\"user__lang\":\"user_user__lang__KtXQb\",\"header\":\"user_header__1sq_R\",\"header__title\":\"user_header__title__3TSxz\",\"header__logo\":\"user_header__logo__2i4Xy\",\"header__subtitle\":\"user_header__subtitle__3cazf\",\"footer\":\"user_footer__1nprT\",\"footer__copyright\":\"user_footer__copyright__1A0F4\",\"footer__links\":\"user_footer__links__13SVJ\",\"footer__link\":\"user_footer__link__245Os\",\"login__remember\":\"user_login__remember__2ZP98\",\"login__link-register\":\"user_login__link-register__B6Jbj\",\"login__captcha\":\"user_login__captcha__KEqzD\",\"register__captcha-button\":\"user_register__captcha-button__3Z3Pr\",\"register__popover-wrapper\":\"user_register__popover-wrapper__wqM1X\",\"register__popover-placeholder\":\"user_register__popover-placeholder__3SQeD\",\"register__popover-content\":\"user_register__popover-content__18QDj\",\"register__progress-color\":\"user_register__progress-color__YXnpm\",\"success\":\"user_success__2EKT4\",\"exception\":\"user_exception__3rxVR\",\"normal\":\"user_normal__3JjmY\",\"register__password-tips\":\"user_register__password-tips__3CWqd\"};","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nconst Required: React.FC<{ labelId: string }> = ({ labelId }) => {\n  return (\n    <FormattedMessage id={'required'} values={{ label: <FormattedMessage id={labelId}/> }}/>\n  )\n}\n\nexport default Required\n","export const usernameReg: RegExp = /^[0-9A-z]{6,16}$/\nexport const passwordReg = /^[\\w-*/+.~!@#$%^&()]{6,20}$/\nexport const emailReg = /^[A-z0-9]+([_.][A-z0-9]+)*@([A-z0-9-]+\\.)+[A-z]{2,6}$/\n\nexport function verifyUsername(str: string): boolean {\n  return usernameReg.test(str)\n}\n\nexport function verifyPassword(str: string): boolean {\n  return passwordReg.test(str)\n}\n\nexport function verifyEmail(str: string): boolean {\n  return emailReg.test(str)\n}\n\nexport default {\n  verifyEmail,\n  verifyUsername,\n  verifyPassword\n}\n","import React, { useEffect, useState } from 'react'\nimport { Rule } from 'antd/es/form'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport classNames from 'classnames/bind'\nimport { Row, Col, Form, Input, Alert, Button, Checkbox, message } from 'antd'\nimport {\n  UserOutlined,\n  LockOutlined,\n  SafetyCertificateOutlined\n} from '@ant-design/icons'\nimport { encrypted } from '@/utils/util'\nimport { signIn } from '@/store/actions/user'\nimport { getCaptcha } from '@/api/modules/common'\nimport { ResponseData, RequestData } from '@/api/types'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport Required from '@/components/RequiredTips'\nimport { passwordReg, usernameReg } from '@/utils/validate'\nimport scss from './user.module.scss'\nconst cx = classNames.bind(scss)\n\ninterface SignInParams extends RequestData {\n  username: string,\n  password: string,\n  captcha?: string,\n  captchaId?: string,\n}\n\nconst Login: React.FC = () => {\n  const intl = useIntl()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const cacheUsername: string = localStorage.getItem('admin_username') || ''\n  const [loading, setLoading] = useState<boolean>(false)\n  const [checkCaptcha, setCheckCaptcha] = useState<boolean>(!!sessionStorage.getItem('checkCaptcha'))\n  const [remember, setRemember] = useState<boolean>(!!cacheUsername)\n  const [errorMessage, setErrorMessage] = useState<string>('')\n  const [captchaImg, setCaptchaImg] = useState<string>('')\n  const [form] = Form.useForm()\n  const initialValues: SignInParams = {\n    username: cacheUsername || '',\n    password: '',\n    captcha: '',\n    captchaId: ''\n  }\n  const usernameRule: Rule[] = [\n    {\n      required: true,\n      message: <Required labelId={'user.login.username'}/>\n    },\n    {\n      pattern: usernameReg,\n      message: <FormattedMessage id={'user.login.usernameReg'}/>\n    }\n  ]\n  const passwordRule: Rule[] = [\n    {\n      required: true,\n      message: <Required labelId={'user.login.password'}/>\n    },\n    {\n      pattern: passwordReg,\n      message: <FormattedMessage id={'user.login.passwordReg'}/>\n    }\n  ]\n  const captchaRule: Rule[] = [\n    {\n      required: checkCaptcha,\n      message: <Required labelId={'user.login.captcha'}/>\n    }\n  ]\n\n  useEffect(getCaptchaImg, [checkCaptcha])\n\n  function onFinish(values: SignInParams): void {\n    values = {\n      ...values,\n      password: encrypted(values.password),\n      _isShowErrorTips: false\n    }\n    setLoading(true)\n    setErrorMessage('')\n    dispatch<Promise<ResponseData>>(signIn(values)).then(({ success, message: msg }) => {\n      setLoading(false)\n      if (success) {\n        history.replace('/')\n        setRememberUser(remember, values.username)\n        sessionStorage.removeItem('checkCaptcha')\n        message.success(intl.formatMessage({ id: 'user.login.success' }))\n      } else {\n        getCaptchaImg()\n        setErrorMessage(msg)\n        setCheckCaptcha(true)\n        sessionStorage.setItem('checkCaptcha', 'true')\n      }\n    })\n  }\n\n  function setRememberUser(remember: boolean, username: string): void {\n    if (remember) {\n      localStorage.setItem('admin_username', username)\n    } else {\n      localStorage.removeItem('admin_username')\n    }\n  }\n\n  function getCaptchaImg(): void {\n    if (!checkCaptcha) return\n    getCaptcha({ _isNeedLoading: false }).then(({ data, success }) => {\n      if (success) {\n        setCaptchaImg(data.image)\n        form.setFieldsValue({ captchaId: data.captchaId })\n      }\n    })\n  }\n\n  return (\n    <div className={cx('login')}>\n      <h3 className={cx('user__title')}>\n        {intl.formatMessage({ id: 'user.login.login' })}\n      </h3>\n      <Form\n        name=\"login\"\n        size=\"large\"\n        form={form}\n        initialValues={initialValues}\n        onFinish={v => onFinish(v as SignInParams)}\n      >\n        {\n          errorMessage &&\n          <Form.Item className=\"Item\">\n            <Alert message={errorMessage} type=\"error\" showIcon/>\n          </Form.Item>\n        }\n        <Form.Item name=\"username\" rules={usernameRule}>\n          <Input maxLength={16} placeholder={intl.formatMessage({ id: 'user.login.username' })}\n            prefix={<UserOutlined/>}/>\n        </Form.Item>\n        <Form.Item name=\"password\" rules={passwordRule}>\n          <Input.Password\n            maxLength={20}\n            visibilityToggle={false}\n            onPressEnter={() => form.submit()}\n            prefix={<LockOutlined/>}\n            placeholder={intl.formatMessage({ id: 'user.login.password' })}\n          />\n        </Form.Item>\n        {\n          checkCaptcha &&\n          <Form.Item>\n            <Row>\n              <Col span={15}>\n                <Form.Item name=\"captcha\" rules={captchaRule} noStyle>\n                  <Input maxLength={4} placeholder={intl.formatMessage({ id: 'user.login.captcha' })}\n                    prefix={<SafetyCertificateOutlined/>}/>\n                </Form.Item>\n              </Col>\n              <Col span={9}>\n                <a onClick={getCaptchaImg} dangerouslySetInnerHTML={{ __html: captchaImg }}\n                  className={cx('login__captcha')}\n                  href=\"javascript:void (0);\"/>\n              </Col>\n            </Row>\n          </Form.Item>\n        }\n        <div className={cx('login__remember')}>\n          <Checkbox checked={remember} onChange={(e) => setRemember(e.target.checked)} name=\"remember\">\n            {intl.formatMessage({ id: 'user.login.remember' })}\n          </Checkbox>\n          <a style={{ float: 'right' }} href=\"javascript:void (0);\">\n            {intl.formatMessage({ id: 'user.login.forgotPassword' })}\n          </a>\n        </div>\n        <Form.Item name=\"captchaId\" noStyle>\n          <Input onPressEnter={() => form.submit()} type=\"hidden\"/>\n        </Form.Item>\n        <Form.Item>\n          <Button loading={loading} type=\"primary\" htmlType=\"submit\" block>\n            {intl.formatMessage({ id: 'user.login.login' })}\n          </Button>\n        </Form.Item>\n      </Form>\n      <p className={cx('login__link-register')}>\n        <a onClick={() => history.push('/user/register')} href=\"javascript:void (0);\">\n          {intl.formatMessage({ id: 'user.login.register' })}\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}