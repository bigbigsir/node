{"version":3,"sources":["views/projects/api.ts","views/projects/index.module.scss","views/projects/CreateForm.tsx","views/projects/index.tsx"],"names":["getProjectList","data","config","http","post","removeProject","addProject","getProjects","updateProject","module","exports","CreateForm","classNames","bind","scss","props","intl","useIntl","role","modalVisible","onCancel","onSuccess","useState","formatMessage","id","title","setTitle","Form","useForm","form","nameRule","required","onFinish","values","api","then","success","console","log","useEffect","setFieldsValue","resetFields","onOk","submit","visible","maskClosable","name","labelCol","span","v","Item","noStyle","hidden","type","rules","label","placeholder","Option","value","maxLength","TextArea","rows","cx","Index","setRole","setModalVisible","total","current","pageSize","pagination","setPagination","roleList","setRoleList","loading","setLoading","columns","width","fixed","dataIndex","render","text","color","key","record","onClick","editRole","href","onConfirm","removeRole","params","page","className","align","icon","PlusOutlined","rowKey","scroll","x","showTotal","onChange","defaultExpandAllRows","dataSource"],"mappings":"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","file":"static/js/projects.7ccf21f1.chunk.js","sourcesContent":["import http from '@/api/http'\nimport { RequestApiFn } from '@/api/types'\n\n// 获取角色列表\nexport const getProjectList: RequestApiFn = (data, config) => {\n  const url: string = '/project/getProjectList'\n  return http.post(url, data, config)\n}\n\n// 获取角色列表\nexport const getProjects: RequestApiFn = (data, config) => {\n  const url: string = '/project/getProjects'\n  return http.post(url, data, config)\n}\n\n// 添加角色\nexport const addProject: RequestApiFn = (data, config) => {\n  const url: string = '/project/addProject'\n  return http.post(url, data, config)\n}\n\n// 添加角色\nexport const updateProject: RequestApiFn = (data, config) => {\n  const url: string = '/project/updateProject'\n  return http.post(url, data, config)\n}\n\n// 删除角色\nexport const removeProject: RequestApiFn = (data, config) => {\n  const url: string = '/project/removeProject'\n  return http.post(url, data, config)\n}\n\nexport default {\n  addProject,\n  getProjects,\n  updateProject,\n  removeProject,\n  getProjectList\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"projects_page__WyTXV\",\"page__header\":\"projects_page__header__1MdNG\"};","import React, {\n  useState,\n  useEffect\n} from 'react'\nimport { useIntl } from 'react-intl'\nimport { Rule } from 'antd/es/form'\nimport classNames from 'classnames/bind'\nimport api from './api'\nimport { Modal, Form, Input, Select } from 'antd'\nimport scss from './index.module.scss'\n\nconst cx = classNames.bind(scss)\n\ninterface FormValues {\n  id?: string\n  key?: string\n  name?: string\n  type?: string\n  secret?: string,\n  describe?: string,\n  shellPath?: string,\n  projectDir?: string\n}\n\ninterface CreateFormProps {\n  role?: any\n  modalVisible: boolean\n  onCancel: () => void\n  onSuccess: () => void\n}\n\nconst CreateForm: React.FC<CreateFormProps> = (props) => {\n  const intl = useIntl()\n  const { role, modalVisible, onCancel, onSuccess } = props\n  const [title, setTitle] = useState<string>(intl.formatMessage({ id: 'add' }))\n  const [form] = Form.useForm()\n  const nameRule: Rule[] = [\n    {\n      required: true\n    }\n  ]\n  useEffect(toggleVisible, [modalVisible, role])\n\n  function addProject(values: FormValues) {\n    api.addProject(values).then(({ success }) => {\n      if (success) {\n        onCancel()\n        onSuccess()\n      }\n    })\n  }\n\n  function updateProject(values: FormValues) {\n    api.updateProject(values).then(({ success }) => {\n      if (success) {\n        onCancel()\n        onSuccess()\n      }\n    })\n  }\n\n  function toggleVisible() {\n    if (role) {\n      form.setFieldsValue(role)\n      setTitle(intl.formatMessage({ id: 'update' }))\n    } else {\n      form.resetFields()\n      setTitle(intl.formatMessage({ id: 'add' }))\n    }\n  }\n\n  function onFinish(values: FormValues) {\n    if (values.id) {\n      updateProject(values)\n    } else {\n      addProject(values)\n    }\n    console.log(values)\n  }\n\n  return (\n    <Modal\n      title={title}\n      onOk={() => form.submit()}\n      visible={modalVisible}\n      onCancel={onCancel}\n      maskClosable={false}\n    >\n      <Form\n        name=\"menu\"\n        form={form}\n        labelCol={{ span: 4 }}\n        onFinish={v => onFinish(v as FormValues)}\n      >\n        <Form.Item name=\"id\" noStyle>\n          <Input hidden type=\"text\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"type\"\n          rules={nameRule}\n          label=\"类型\"\n        >\n          <Select placeholder=\"类型\">\n            <Select.Option value=\"Web\">Web</Select.Option>\n            <Select.Option value=\"Node\">Node</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"name\"\n          rules={nameRule}\n          label=\"名称\">\n          <Input maxLength={16} placeholder=\"名称\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"key\"\n          rules={nameRule}\n          label=\"标识\"\n        >\n          <Input placeholder=\"标识\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"projectDir\"\n          rules={nameRule}\n          label=\"项目目录\"\n        >\n          <Input placeholder=\"项目目录\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"secret\"\n          rules={nameRule}\n          label=\"秘钥\"\n        >\n          <Input placeholder=\"秘钥\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"shellPath\"\n          rules={nameRule}\n          label=\"shell路径\"\n        >\n          <Input placeholder=\"shell路径\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"describe\"\n          label=\"描述\"\n        >\n          <Input.TextArea placeholder=\"描述\" rows={4}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default CreateForm\n","import React, { useEffect, useState } from 'react'\nimport classNames from 'classnames/bind'\nimport { Table, Button, Space, Divider, Popconfirm, Pagination, Tag } from 'antd'\nimport { MenuItem } from '@/store/types'\nimport { ColumnsType } from 'antd/es/table'\nimport { PlusOutlined } from '@ant-design/icons'\nimport * as api from './api'\nimport { useIntl } from 'react-intl'\nimport scss from './index.module.scss'\nimport CreateForm from './CreateForm'\n\nconst cx = classNames.bind(scss)\n\ninterface MenuItemNoChildren extends Omit<MenuItem, 'children'> {\n  children?: MenuItemNoChildren[]\n}\n\ninterface ProjectItem {\n  id: string\n  key: string\n  name: string\n  type: string\n  secret: string,\n  describe: string,\n  shellPath: string,\n  projectDir: string\n}\n\ninterface Pagination {\n  total: number,\n  current: number,\n  pageSize: number,\n}\n\nconst Index: React.FC = () => {\n  const intl = useIntl()\n  const [role, setRole] = useState<null | ProjectItem>(null)\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\n  const [pagination, setPagination] = useState<Pagination>({\n    total: 0,\n    current: 1,\n    pageSize: 10\n  })\n  const [roleList, setRoleList] = useState<ProjectItem[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const columns: ColumnsType<ProjectItem> = [\n    {\n      title: '名称',\n      width: 150,\n      fixed: 'left',\n      dataIndex: 'name'\n    },\n    {\n      title: '标识',\n      width: 150,\n      dataIndex: 'key'\n    },\n    {\n      title: '类型',\n      width: 150,\n      dataIndex: 'type',\n      render(text) {\n        return (\n          <Tag color=\"blue\">\n            {text}\n          </Tag>\n        )\n      }\n    },\n    {\n      title: '项目目录',\n      dataIndex: 'projectDir'\n    },\n    {\n      title: 'shell路径',\n      dataIndex: 'shellPath'\n    },\n    {\n      title: '秘钥',\n      dataIndex: 'secret'\n    },\n    {\n      title: '描述',\n      dataIndex: 'describe'\n    },\n    {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      width: 150,\n      render(text, record) {\n        return (\n          <>\n            <a onClick={() => editRole(record)} href=\"javascript:void (0);\">\n              {intl.formatMessage({ id: 'update' })}\n            </a>\n            <Divider type=\"vertical\"/>\n            <Popconfirm\n              title={intl.formatMessage({ id: 'deleteTips' })}\n              onConfirm={() => removeRole(record)}\n            >\n              <a href=\"javascript:void (0);\">\n                {intl.formatMessage({ id: 'delete' })}\n              </a>\n            </Popconfirm>\n          </>\n        )\n      }\n    }\n  ]\n\n  useEffect(getProjectList, [])\n\n  function getProjectList(params = {}) {\n    params = {\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      ...params\n    }\n    setLoading(true)\n    api.getProjectList(params).then(({ success, data }) => {\n      if (success) {\n        setPagination({\n          total: data.total,\n          current: data.page,\n          pageSize: data.pageSize\n        })\n        setRoleList(data.rows)\n      }\n      setLoading(false)\n    })\n  }\n\n  function onChange(pagination: any) {\n    getProjectList({\n      page: pagination.current,\n      pageSize: pagination.pageSize\n    })\n  }\n\n  function addMenu() {\n    setRole(null)\n    setModalVisible(true)\n  }\n\n  function editRole(record: ProjectItem) {\n    setRole(record)\n    setModalVisible(true)\n  }\n\n  function removeRole(record: ProjectItem): void {\n    api.removeProject({ id: record.id }).then(({ success }) => {\n      success && getProjectList()\n    })\n  }\n\n  return (\n    <div className={cx('page')}>\n      <Space align=\"center\" className={cx('page__header')}>\n        <Button onClick={addMenu} type=\"primary\" icon={<PlusOutlined/>}>\n          {intl.formatMessage({ id: 'add' })}\n        </Button>\n      </Space>\n      <Table\n        rowKey='id'\n        scroll={{ x: '100vw' }}\n        loading={loading}\n        pagination={{\n          ...pagination,\n          showTotal: total => `共 ${total} 条`\n        }}\n        onChange={onChange}\n        columns={columns}\n        defaultExpandAllRows\n        dataSource={roleList}\n      />\n      <CreateForm\n        role={role}\n        modalVisible={modalVisible}\n        onSuccess={() => getProjectList()}\n        onCancel={() => setModalVisible(false)}/>\n    </div>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}