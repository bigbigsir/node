{"version":3,"sources":["components/icons/CustomIcons.tsx","utils/icons.ts","views/roles/index.module.scss","views/roles/api.ts","views/roles/CreateForm.tsx","views/roles/index.tsx"],"names":["SizeSvg","viewBox","width","height","p-id","fill","d","LanguageSvg","Svg404","Icon404","props","component","SizeIcon","LanguageIcon","temp","antIcons","icons","customIcons","key","module","exports","getRoleList","data","config","http","post","TreeNode","classNames","bind","scss","Tree","CreateForm","intl","useIntl","role","modalVisible","onCancel","onSuccess","useState","menus","setMenus","checkedKeys","setCheckedKeys","formatMessage","id","title","setTitle","Form","useForm","form","addRoleFn","values","then","success","editRole","useEffect","api","getMenus","parent","setFieldsValue","resetFields","onOk","submit","visible","maskClosable","name","labelCol","span","initialValues","sort","onFinish","v","console","log","Item","noStyle","hidden","type","rules","required","label","maxLength","placeholder","min","max","style","showIcon","checkable","checkStrictly","onCheck","checked","map","item","renderTreeNode","Icon","icon","children","cx","Index","setRole","setModalVisible","total","current","pageSize","pagination","setPagination","roleList","setRoleList","loading","setLoading","columns","dataIndex","render","text","moment","format","record","onClick","href","onConfirm","removeRole","params","page","rows","className","align","rowKey","showTotal","onChange","defaultExpandAllRows","dataSource"],"mappings":"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","file":"static/js/roles.e05cf9fa.chunk.js","sourcesContent":["import React from 'react'\nimport Icon from '@ant-design/icons'\n\nconst SizeSvg = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2079\" fill=\"currentColor\">\n    <path\n      d=\"M920 416H616c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-56h60v320h-46c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h164c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-46V480h60v56c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V424c0-4.4-3.6-8-8-8z\"\n      p-id=\"18078\"/>\n    <path\n      d=\"M656 296V168c0-4.4-3.6-8-8-8H104c-4.4 0-8 3.6-8 8v128c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-64h168v560h-92c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-92V232h168v64c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8z\"\n      p-id=\"18079\"/>\n  </svg>\n)\n\nconst LanguageSvg = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2079\" fill=\"currentColor\">\n    <path\n      d=\"M708.336644 912.339898c-16.750499 9.184173-32.459273 19.464307-50.288337 27.570939-61.682851 26.50977-107.657952 35.154661-175.272909 35.154661-54.601572 0-122.755812-22.160719-171.426301-46.514383-7.045463-3.234671-32.459273-18.926048-37.347606-18.926048-5.3918 0-9.705036 4.331655-9.705036 10.280134 0 3.792373 1.078565 5.949502 4.313236 8.644891 45.435819 32.998555 149.823284 67.074651 207.157083 67.074651l45.435819 0c15.671934 0 33.537837-3.25309 49.209772-6.487761 51.402717-8.66331 105.465007-30.284747 149.284001-58.412364l21.639856 35.693944 29.187763-86.539982-85.444021-7.027044L708.336644 912.339898z\"\n      p-id=\"19192\"/>\n    <path d=\"M675.877371 516.41352 751.07605 539.130917 716.999954 416.357709Z\" p-id=\"19193\"></path>\n    <path\n      d=\"M196.681498 696.520527c17.829064-11.358699 47.053666-48.131207 56.794517-59.490929 28.110221-32.998555 52.984748-68.153216 72.467475-97.898681 3.773953 1.617847 34.616402 27.049053 42.739407 32.459273 8.088212 5.3918 40.008202 23.25668 47.053666 26.492374 7.009647 2.713808 33.537837 15.151072 34.616402 11.358699 1.078565-4.331655-4.888334-29.206182-8.124028-30.284747-3.234671-1.078565-67.613934-28.127617-76.816526-32.459273-7.54893-3.773953-25.953092-11.358699-34.616402-15.133675 24.335245-37.869492 39.504736-66.536392 41.661865-70.867024 3.773953-8.105608 29.727045-58.951647 30.302143-61.647035 0.539282-3.25309 1.078565-15.151072 0.539282-17.86488-0.539282-2.696412-9.741875 2.713808-22.717398 7.045463-13.012362 4.313236-37.347606 20.542872-47.053666 22.179139-9.202593 2.157129-39.504736 13.515828-55.17667 18.926048-15.708773 5.41022-44.896536 14.055111-56.794517 17.308201-11.897981 3.234671-22.717398 3.773953-29.223578 5.949502 0.539282 9.184173 2.732228 12.437264 2.732228 12.437264 1.617847 2.713808 8.088212 9.741875 15.133675 11.358699 7.584746 2.157129 20.022009 1.617847 25.413809 0 5.966898-1.078565 15.672958-5.949502 16.750499-8.105608 1.11438-2.174526-0.539282-8.66331 1.653663-10.819416 2.157129-1.635243 31.884175-8.66331 42.703591-11.897981 11.358699-3.792373 54.099129-18.404162 59.526745-17.847483-1.653663 6.487761-35.730783 74.642001-47.089481 95.184873-10.819416 20.561291-75.162864 110.335944-88.678692 126.026298-10.819416 12.437264-35.693944 43.261293-44.357254 49.767474C178.277336 699.773617 193.950294 698.138374 196.681498 696.520527z\"\n      p-id=\"19194\"/>\n    <path\n      d=\"M277.812283 388.769374c10.819416 0 24.335245-3.25309 32.459273-6.487761 8.088212-3.25309 21.60404-10.280134 27.031657-20.561291 1.078565-2.157129 3.773953-5.949502 2.157129-15.151072-1.617847-7.027044-5.931083-9.184173-11.358699-9.184173-5.3918 0.539282-21.639856 4.870938-29.762861 7.566326-7.54893 2.174526-24.335245 7.027044-31.344892 8.66331-7.045463 1.617847-22.717398-0.539282-24.874527-2.713808-2.192945-2.157129 2.696412 16.768919 9.165754 23.795962C263.182075 386.593825 272.922926 388.230092 277.812283 388.769374z\"\n      p-id=\"19195\"/>\n    <path\n      d=\"M847.87877 263.820618 847.87877 37.738509c0-7.027044-4.852518-11.358699-10.819416-11.358699-4.852518 0-341.270571 116.285446-345.081363 117.364011L190.175317 36.659945l0 207.695343c-45.975101 15.690354-78.973656 26.492374-80.59048 27.031657-3.234671 1.095961-7.584746 2.174526-10.819416 5.949502-1.078565 1.095961-1.617847 3.792373-2.157129 5.41022l0 583.061452c0 0.556679 0.539282 1.095961 0.539282 1.635243 1.617847 4.331655 5.427616 7.027044 9.740852 7.027044 5.3918 0 393.21257-130.897236 401.87588-134.671189 0 0 0.539282 0 418.626379 133.054365L927.390685 289.252847 847.87877 263.820618zM493.056556 730.921012 107.410312 859.850429 107.410312 286.902312 493.056556 157.418262 493.056556 730.921012zM507.649925 150.733003l330.304821-112.99347 0 219.055065L507.649925 150.733003zM788.927123 677.594479l-20.022009-73.024154L654.776797 569.415664l-24.335245 59.490929-55.17667-16.750499 116.860545-289.922089 54.06229 16.768919 97.9171 355.361497L788.927123 677.594479z\"\n      p-id=\"19196\"/>\n  </svg>\n)\n\nconst Svg404 = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2064\" fill=\"currentColor\">\n    <path\n      d=\"M973.557996 586.14612v79.591925c31.643248-60.647559 49.572023-128.348277 49.572022-199.87945C1023.130018 208.754206 794.070328 0.206249 511.664135 0.206249 229.26594 0.206249 0.206249 208.754206 0.206249 465.858595c0 3.222701 0.22391 6.445403 0.22391 9.6761l183.685976-207.540363h106.67701l-158.016321 217.408387h51.339311V430.192968l109.779759-155.753233v394.728927H184.116135V586.14612H17.463295c47.588822 162.206632 188.78792 289.547315 367.835765 331.058586-11.515359 26.389365-44.925895 90.067703-100.479508 101.351156-68.828263 14.106315 186.788726 3.422621 369.155233-105.381532 140.095543-36.87314 255.401075-126.740924 318.031836-244.005668h-108.004475V586.14612H680.09226V475.726618l183.909886-207.732286h104.02208l-155.369388 217.408387h51.347308v-59.440047l109.771763-155.153474v315.336922h-0.215913z m-625.667861 22.566905a84.094111 84.094111 0 0 1-7.96479-36.265385V356.446687c0-12.898802 2.65493-24.981932 7.96479-36.265385a93.242424 93.242424 0 0 1 21.695257-29.428141c9.068346-8.252674 19.911976-14.905993 32.306981-19.736047 12.395005-4.83805 25.669655-7.261074 39.839944-7.261074h90.29961c14.154296 0 27.436943 2.423024 39.831948 7.261074 12.171095 4.830054 22.790815 11.275456 31.875155 19.336208l-98.040491 130.371461v-23.174661a15.673684 15.673684 0 0 0-5.317857-12.091127c-3.542572-3.222701-7.96479-4.830054-13.27465-4.830053-5.317857 0-9.740075 1.607352-13.282647 4.830053a15.673684 15.673684 0 0 0-5.30986 12.091127v72.538768L354.97528 620.804153a84.413982 84.413982 0 0 1-7.085145-12.091128z m285.724855-36.265385c0 12.898802-2.65493 24.981932-7.972787 36.265385a93.242424 93.242424 0 0 1-21.68726 29.428141c-9.068346 8.252674-19.911976 14.905993-32.306981 19.744043-12.395005 4.830054-25.669655 7.253077-39.839944 7.253077H441.508408c-14.154296 0-27.436943-2.423024-39.831948-7.253077-12.395005-4.83805-23.238635-11.491369-32.314978-19.75204a99.879749 99.879749 0 0 1-11.06754-12.091127l109.771763-145.677293v50.979455c0 4.83805 1.775285 8.868426 5.317857 12.091128 3.534576 3.222701 7.96479 4.830054 13.274651 4.830053 5.30986 0 9.740075-1.607352 13.27465-4.830053a15.673684 15.673684 0 0 0 5.317857-12.091128V430.992645L607.721425 294.791533c7.301058 7.452996 13.27465 15.913587 17.704865 25.389769 5.30986 11.275456 7.96479 23.366583 7.96479 36.265385v216.000953h0.22391z\"\n      p-id=\"2191\"/>\n  </svg>\n)\n\nexport const Icon404: React.FC = props => <Icon component={Svg404} {...props} />\nexport const SizeIcon: React.FC = props => <Icon component={SizeSvg} {...props} />\nexport const LanguageIcon: React.FC = props => <Icon component={LanguageSvg} {...props} />\n","import * as antIcons from '@ant-design/icons'\nimport * as customIcons from '@/components/icons/CustomIcons'\n\nconst temp: { [key: string]: any } = { ...antIcons }\nconst icons: { [key: string]: any } = { ...customIcons }\n\nfor (const key in temp) {\n  if (typeof temp[key] !== 'function' && key !== 'default') {\n    icons[key] = temp[key]\n  }\n}\n\nexport default icons\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"roles_page__l7WzV\",\"page__header\":\"roles_page__header__2J4on\",\"users__tree-select\":\"roles_users__tree-select__3GWvr\"};","import http from '@/api/http'\nimport { RequestApiFn } from '@/api/types'\n\n// 获取角色列表\nexport const getRoleList: RequestApiFn = (data, config) => {\n  const url: string = '/role/getRoleList'\n  return http.post(url, data, config)\n}\n\n// 添加角色\nexport const addRole: RequestApiFn = (data, config) => {\n  const url: string = '/role/addRole'\n  return http.post(url, data, config)\n}\n\n// 添加角色\nexport const updateRole: RequestApiFn = (data, config) => {\n  const url: string = '/role/updateRole'\n  return http.post(url, data, config)\n}\n\n// 删除角色\nexport const removeRole: RequestApiFn = (data, config) => {\n  const url: string = '/role/removeRole'\n  return http.post(url, data, config)\n}\n","import React, {\n  useState,\n  useEffect\n} from 'react'\nimport api from '@/api'\nimport { useIntl } from 'react-intl'\nimport { Rule } from 'antd/es/form'\nimport icons from '@/utils/icons'\nimport classNames from 'classnames/bind'\nimport { MenuItem } from '@/store/types'\nimport { addRole, updateRole } from './api'\nimport { Button, Modal, Form, Input, InputNumber, Tree, Col, Row, TreeSelect } from 'antd'\nimport scss from './index.module.scss'\n\nconst cx = classNames.bind(scss)\nconst { TreeNode } = Tree\n\ninterface FormValues {\n  id?: string\n  name: string\n  sort: number\n  menus?: string[]\n}\n\ninterface CreateFormProps {\n  role?: any\n  modalVisible: boolean\n  onCancel: () => void\n  onSuccess: () => void\n}\n\ninterface TreeItem extends Omit<MenuItem, 'children'> {\n  key: string\n  title: string\n  children: TreeItem[]\n}\n\nconst CreateForm: React.FC<CreateFormProps> = (props) => {\n  const intl = useIntl()\n  const { role, modalVisible, onCancel, onSuccess } = props\n  const [menus, setMenus] = useState<TreeItem[]>([])\n  const [checkedKeys, setCheckedKeys] = useState<string[]>([])\n  const [title, setTitle] = useState<string>(intl.formatMessage({ id: 'add' }))\n  const [form] = Form.useForm()\n  const initialValues: FormValues = {\n    id: '',\n    name: '',\n    sort: 1\n  }\n  const nameRule: Rule[] = [\n    {\n      required: true\n    }\n  ]\n  const sortRule: Rule[] = [\n    { required: true },\n    {\n      min: 1,\n      type: 'number'\n    }\n  ]\n  useEffect(getMenus, [])\n  useEffect(toggleVisible, [modalVisible, role])\n  // const menusMemo = useMemo(() => {\n  //   return format(menus)\n  //\n  //   function format(menus: TreeItem[]) {\n  //     return menus.map(item => {\n  //       const Icon = item.icon && icons[item.icon]\n  //       item.key = item.id\n  //       item.icon = Icon\n  //       item.title = item.name\n  //       item.children.length && format(item.children)\n  //       return item\n  //     })\n  //   }\n  // }, [menus])\n\n  function getMenus() {\n    api.getMenus({ parent: null }).then(({ success, data }) => {\n      success && setMenus(data)\n    })\n  }\n\n  function addRoleFn(values: FormValues) {\n    values.menus = checkedKeys\n    addRole(values).then(({ success }) => {\n      if (success) {\n        onCancel()\n        onSuccess()\n      }\n    })\n  }\n\n  function editRole(values: FormValues) {\n    values.menus = checkedKeys\n    updateRole(values).then(({ success }) => {\n      if (success) {\n        onCancel()\n        onSuccess()\n      }\n    })\n  }\n\n  function renderTreeNode(item: MenuItem): React.ReactNode {\n    const Icon = item.icon && icons[item.icon]\n    return (\n      <TreeNode\n        key={item.id}\n        title={item.name}\n        icon={item.icon && <Icon/>}\n      >\n        {\n          item.children.map(item => renderTreeNode(item))\n        }\n      </TreeNode>\n    )\n  }\n\n  function toggleVisible() {\n    if (role) {\n      setCheckedKeys(role.menus)\n      form.setFieldsValue(role)\n      setTitle(intl.formatMessage({ id: 'update' }))\n    } else {\n      form.resetFields()\n      setCheckedKeys([])\n      setTitle(intl.formatMessage({ id: 'add' }))\n    }\n  }\n\n  function onFinish(values: FormValues) {\n    if (values.id) {\n      editRole(values)\n    } else {\n      addRoleFn(values)\n    }\n    console.log(values)\n  }\n\n  const onCheck = (checkedKeys: any) => {\n    console.log('onCheck', checkedKeys)\n    setCheckedKeys(checkedKeys.checked)\n  }\n\n  return (\n    <Modal\n      title={title}\n      onOk={() => form.submit()}\n      visible={modalVisible}\n      onCancel={onCancel}\n      maskClosable={false}\n    >\n      <Form\n        name=\"menu\"\n        form={form}\n        labelCol={{ span: 4 }}\n        initialValues={initialValues}\n        onFinish={v => onFinish(v as FormValues)}\n      >\n        <Form.Item name=\"id\" noStyle>\n          <Input hidden type=\"text\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"name\"\n          rules={nameRule}\n          label=\"名称\">\n          <Input maxLength={16} placeholder=\"名称\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"sort\"\n          rules={sortRule}\n          label=\"排序\"\n        >\n          <InputNumber min={1} max={100000} style={{ width: '100%' }}/>\n        </Form.Item>\n        <Form.Item label=\"权限\">\n          <Tree\n            showIcon\n            checkable\n            checkStrictly\n            height={200}\n            onCheck={onCheck}\n            checkedKeys={checkedKeys}\n          >\n            {\n              menus.map(item => renderTreeNode(item))\n            }\n          </Tree>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default CreateForm\n","import React, { useEffect, useMemo, useState } from 'react'\nimport classNames from 'classnames/bind'\nimport { Table, Button, Space, Divider, Popconfirm, Pagination } from 'antd'\nimport { MenuItem } from '@/store/types'\nimport { ColumnsType } from 'antd/es/table'\nimport { PlusOutlined } from '@ant-design/icons'\nimport * as api from './api'\nimport moment from 'moment'\nimport { useIntl } from 'react-intl'\nimport scss from './index.module.scss'\nimport CreateForm from './CreateForm'\n\nconst cx = classNames.bind(scss)\n\ninterface MenuItemNoChildren extends Omit<MenuItem, 'children'> {\n  children?: MenuItemNoChildren[]\n}\n\ninterface RoleItem {\n  id: string\n  name: string\n  sort: number\n  menus: string[]\n  created: string\n  updated: string\n  lastLoginDate: string\n}\n\ninterface Pagination {\n  total: number,\n  current: number,\n  pageSize: number,\n}\n\nconst Index: React.FC = () => {\n  const intl = useIntl()\n  const [role, setRole] = useState<null | RoleItem>(null)\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\n  const [pagination, setPagination] = useState<Pagination>({\n    total: 0,\n    current: 1,\n    pageSize: 10\n  })\n  const [roleList, setRoleList] = useState<RoleItem[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const columns: ColumnsType<RoleItem> = [\n    {\n      title: '名称',\n      dataIndex: 'name'\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'created',\n      render(text) {\n        return moment(text).format('YYYY-MM-DD hh:mm:ss')\n      }\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'updated',\n      render(text) {\n        return moment(text).format('YYYY-MM-DD hh:mm:ss')\n      }\n    },\n    {\n      title: '排序',\n      width: '10%',\n      dataIndex: 'sort'\n    },\n    {\n      title: '操作',\n      key: 'action',\n      width: '20%',\n      render(text, record) {\n        return (\n          <>\n            <a onClick={() => editRole(record)} href=\"javascript:void (0);\">\n              {intl.formatMessage({ id: 'update' })}\n            </a>\n            <Divider type=\"vertical\"/>\n            <Popconfirm\n              title={intl.formatMessage({ id: 'deleteTips' })}\n              onConfirm={() => removeRole(record)}\n            >\n              <a href=\"javascript:void (0);\">\n                {intl.formatMessage({ id: 'delete' })}\n              </a>\n            </Popconfirm>\n          </>\n        )\n      }\n    }\n  ]\n\n  useEffect(getRoleList, [])\n\n  function getRoleList(params = {}) {\n    params = {\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      ...params\n    }\n    setLoading(true)\n    api.getRoleList(params).then(({ success, data }) => {\n      if (success) {\n        setPagination({\n          total: data.total,\n          current: data.page,\n          pageSize: data.pageSize\n        })\n        setRoleList(data.rows)\n      }\n      setLoading(false)\n    })\n  }\n\n  function onChange(pagination: any) {\n    getRoleList({\n      page: pagination.current,\n      pageSize: pagination.pageSize\n    })\n  }\n\n  function addMenu() {\n    setRole(null)\n    setModalVisible(true)\n  }\n\n  function editRole(record: RoleItem) {\n    setRole(record)\n    setModalVisible(true)\n  }\n\n  function removeRole(record: RoleItem): void {\n    api.removeRole({ id: record.id }).then(({ success }) => {\n      success && getRoleList()\n    })\n  }\n\n  return (\n    <div className={cx('users', 'page')}>\n      <Space align=\"center\" className={cx('page__header')}>\n        <Button onClick={addMenu} type=\"primary\" icon={<PlusOutlined/>}>\n          {intl.formatMessage({ id: 'add' })}\n        </Button>\n      </Space>\n      <Table\n        rowKey='id'\n        loading={loading}\n        pagination={{\n          ...pagination,\n          showTotal: total => `共 ${total} 条`\n        }}\n        onChange={onChange}\n        columns={columns}\n        defaultExpandAllRows\n        dataSource={roleList}\n      />\n      <CreateForm\n        role={role}\n        modalVisible={modalVisible}\n        onSuccess={() => getRoleList()}\n        onCancel={() => setModalVisible(false)}/>\n    </div>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}