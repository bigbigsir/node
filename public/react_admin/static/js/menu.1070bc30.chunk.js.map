{"version":3,"sources":["components/icons/CustomIcons.tsx","utils/icons.ts","views/menus/index.module.scss","views/users/index.module.scss","components/icons/icons.module.scss","views/home/index.tsx","views/users/api.ts","views/users/CreateForm.tsx","views/users/index.tsx","components/icons/IconsDialog.tsx","views/menus/CreateForm.tsx","views/menus/index.tsx"],"names":["SizeSvg","viewBox","width","height","p-id","fill","d","LanguageSvg","Svg404","Icon404","props","component","SizeIcon","LanguageIcon","temp","antIcons","icons","customIcons","key","module","exports","Index","style","textAlign","marginTop","getUserList","data","config","http","post","CreateForm","intl","useIntl","user","modalVisible","onCancel","onSuccess","useState","roles","setRoles","formatMessage","id","title","setTitle","Form","useForm","form","nameRule","required","onFinish","values","console","log","then","success","api","useEffect","setFieldsValue","role","resetFields","onOk","submit","visible","maskClosable","destroyOnClose","name","labelCol","span","v","Item","noStyle","hidden","type","rules","label","readOnly","maxLength","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","map","item","Option","value","cx","classNames","bind","scss","setUser","setModalVisible","total","current","pageSize","pagination","setPagination","userList","setUserList","loading","setLoading","columns","dataIndex","render","text","moment","format","record","onClick","updateUser","href","onConfirm","removeMenu","params","page","rows","className","align","icon","rowKey","showTotal","onChange","defaultExpandAllRows","dataSource","IconsDialog","selectedIcon","iconList","push","footer","index","TreeNode","TreeSelect","menu","menus","setIcon","setVisible","SelectedIcon","initialValues","sort","parent","undefined","updateMenu","addMenu","allowClear","treeIcon","dropdownStyle","maxHeight","overflow","renderTreeNode","disabled","Icon","min","max","shape","marginLeft","setMenu","setMenus","createFormProps","getMenus","marginRight","editMenu","noChildrenMenus","useMemo","removeChildren","length"],"mappings":"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","file":"static/js/menu.1070bc30.chunk.js","sourcesContent":["import React from 'react'\nimport Icon from '@ant-design/icons'\n\nconst SizeSvg = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2079\" fill=\"currentColor\">\n    <path\n      d=\"M920 416H616c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-56h60v320h-46c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h164c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-46V480h60v56c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V424c0-4.4-3.6-8-8-8z\"\n      p-id=\"18078\"/>\n    <path\n      d=\"M656 296V168c0-4.4-3.6-8-8-8H104c-4.4 0-8 3.6-8 8v128c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-64h168v560h-92c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-92V232h168v64c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8z\"\n      p-id=\"18079\"/>\n  </svg>\n)\n\nconst LanguageSvg = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2079\" fill=\"currentColor\">\n    <path\n      d=\"M708.336644 912.339898c-16.750499 9.184173-32.459273 19.464307-50.288337 27.570939-61.682851 26.50977-107.657952 35.154661-175.272909 35.154661-54.601572 0-122.755812-22.160719-171.426301-46.514383-7.045463-3.234671-32.459273-18.926048-37.347606-18.926048-5.3918 0-9.705036 4.331655-9.705036 10.280134 0 3.792373 1.078565 5.949502 4.313236 8.644891 45.435819 32.998555 149.823284 67.074651 207.157083 67.074651l45.435819 0c15.671934 0 33.537837-3.25309 49.209772-6.487761 51.402717-8.66331 105.465007-30.284747 149.284001-58.412364l21.639856 35.693944 29.187763-86.539982-85.444021-7.027044L708.336644 912.339898z\"\n      p-id=\"19192\"/>\n    <path d=\"M675.877371 516.41352 751.07605 539.130917 716.999954 416.357709Z\" p-id=\"19193\"></path>\n    <path\n      d=\"M196.681498 696.520527c17.829064-11.358699 47.053666-48.131207 56.794517-59.490929 28.110221-32.998555 52.984748-68.153216 72.467475-97.898681 3.773953 1.617847 34.616402 27.049053 42.739407 32.459273 8.088212 5.3918 40.008202 23.25668 47.053666 26.492374 7.009647 2.713808 33.537837 15.151072 34.616402 11.358699 1.078565-4.331655-4.888334-29.206182-8.124028-30.284747-3.234671-1.078565-67.613934-28.127617-76.816526-32.459273-7.54893-3.773953-25.953092-11.358699-34.616402-15.133675 24.335245-37.869492 39.504736-66.536392 41.661865-70.867024 3.773953-8.105608 29.727045-58.951647 30.302143-61.647035 0.539282-3.25309 1.078565-15.151072 0.539282-17.86488-0.539282-2.696412-9.741875 2.713808-22.717398 7.045463-13.012362 4.313236-37.347606 20.542872-47.053666 22.179139-9.202593 2.157129-39.504736 13.515828-55.17667 18.926048-15.708773 5.41022-44.896536 14.055111-56.794517 17.308201-11.897981 3.234671-22.717398 3.773953-29.223578 5.949502 0.539282 9.184173 2.732228 12.437264 2.732228 12.437264 1.617847 2.713808 8.088212 9.741875 15.133675 11.358699 7.584746 2.157129 20.022009 1.617847 25.413809 0 5.966898-1.078565 15.672958-5.949502 16.750499-8.105608 1.11438-2.174526-0.539282-8.66331 1.653663-10.819416 2.157129-1.635243 31.884175-8.66331 42.703591-11.897981 11.358699-3.792373 54.099129-18.404162 59.526745-17.847483-1.653663 6.487761-35.730783 74.642001-47.089481 95.184873-10.819416 20.561291-75.162864 110.335944-88.678692 126.026298-10.819416 12.437264-35.693944 43.261293-44.357254 49.767474C178.277336 699.773617 193.950294 698.138374 196.681498 696.520527z\"\n      p-id=\"19194\"/>\n    <path\n      d=\"M277.812283 388.769374c10.819416 0 24.335245-3.25309 32.459273-6.487761 8.088212-3.25309 21.60404-10.280134 27.031657-20.561291 1.078565-2.157129 3.773953-5.949502 2.157129-15.151072-1.617847-7.027044-5.931083-9.184173-11.358699-9.184173-5.3918 0.539282-21.639856 4.870938-29.762861 7.566326-7.54893 2.174526-24.335245 7.027044-31.344892 8.66331-7.045463 1.617847-22.717398-0.539282-24.874527-2.713808-2.192945-2.157129 2.696412 16.768919 9.165754 23.795962C263.182075 386.593825 272.922926 388.230092 277.812283 388.769374z\"\n      p-id=\"19195\"/>\n    <path\n      d=\"M847.87877 263.820618 847.87877 37.738509c0-7.027044-4.852518-11.358699-10.819416-11.358699-4.852518 0-341.270571 116.285446-345.081363 117.364011L190.175317 36.659945l0 207.695343c-45.975101 15.690354-78.973656 26.492374-80.59048 27.031657-3.234671 1.095961-7.584746 2.174526-10.819416 5.949502-1.078565 1.095961-1.617847 3.792373-2.157129 5.41022l0 583.061452c0 0.556679 0.539282 1.095961 0.539282 1.635243 1.617847 4.331655 5.427616 7.027044 9.740852 7.027044 5.3918 0 393.21257-130.897236 401.87588-134.671189 0 0 0.539282 0 418.626379 133.054365L927.390685 289.252847 847.87877 263.820618zM493.056556 730.921012 107.410312 859.850429 107.410312 286.902312 493.056556 157.418262 493.056556 730.921012zM507.649925 150.733003l330.304821-112.99347 0 219.055065L507.649925 150.733003zM788.927123 677.594479l-20.022009-73.024154L654.776797 569.415664l-24.335245 59.490929-55.17667-16.750499 116.860545-289.922089 54.06229 16.768919 97.9171 355.361497L788.927123 677.594479z\"\n      p-id=\"19196\"/>\n  </svg>\n)\n\nconst Svg404 = () => (\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" p-id=\"2064\" fill=\"currentColor\">\n    <path\n      d=\"M973.557996 586.14612v79.591925c31.643248-60.647559 49.572023-128.348277 49.572022-199.87945C1023.130018 208.754206 794.070328 0.206249 511.664135 0.206249 229.26594 0.206249 0.206249 208.754206 0.206249 465.858595c0 3.222701 0.22391 6.445403 0.22391 9.6761l183.685976-207.540363h106.67701l-158.016321 217.408387h51.339311V430.192968l109.779759-155.753233v394.728927H184.116135V586.14612H17.463295c47.588822 162.206632 188.78792 289.547315 367.835765 331.058586-11.515359 26.389365-44.925895 90.067703-100.479508 101.351156-68.828263 14.106315 186.788726 3.422621 369.155233-105.381532 140.095543-36.87314 255.401075-126.740924 318.031836-244.005668h-108.004475V586.14612H680.09226V475.726618l183.909886-207.732286h104.02208l-155.369388 217.408387h51.347308v-59.440047l109.771763-155.153474v315.336922h-0.215913z m-625.667861 22.566905a84.094111 84.094111 0 0 1-7.96479-36.265385V356.446687c0-12.898802 2.65493-24.981932 7.96479-36.265385a93.242424 93.242424 0 0 1 21.695257-29.428141c9.068346-8.252674 19.911976-14.905993 32.306981-19.736047 12.395005-4.83805 25.669655-7.261074 39.839944-7.261074h90.29961c14.154296 0 27.436943 2.423024 39.831948 7.261074 12.171095 4.830054 22.790815 11.275456 31.875155 19.336208l-98.040491 130.371461v-23.174661a15.673684 15.673684 0 0 0-5.317857-12.091127c-3.542572-3.222701-7.96479-4.830054-13.27465-4.830053-5.317857 0-9.740075 1.607352-13.282647 4.830053a15.673684 15.673684 0 0 0-5.30986 12.091127v72.538768L354.97528 620.804153a84.413982 84.413982 0 0 1-7.085145-12.091128z m285.724855-36.265385c0 12.898802-2.65493 24.981932-7.972787 36.265385a93.242424 93.242424 0 0 1-21.68726 29.428141c-9.068346 8.252674-19.911976 14.905993-32.306981 19.744043-12.395005 4.830054-25.669655 7.253077-39.839944 7.253077H441.508408c-14.154296 0-27.436943-2.423024-39.831948-7.253077-12.395005-4.83805-23.238635-11.491369-32.314978-19.75204a99.879749 99.879749 0 0 1-11.06754-12.091127l109.771763-145.677293v50.979455c0 4.83805 1.775285 8.868426 5.317857 12.091128 3.534576 3.222701 7.96479 4.830054 13.274651 4.830053 5.30986 0 9.740075-1.607352 13.27465-4.830053a15.673684 15.673684 0 0 0 5.317857-12.091128V430.992645L607.721425 294.791533c7.301058 7.452996 13.27465 15.913587 17.704865 25.389769 5.30986 11.275456 7.96479 23.366583 7.96479 36.265385v216.000953h0.22391z\"\n      p-id=\"2191\"/>\n  </svg>\n)\n\nexport const Icon404: React.FC = props => <Icon component={Svg404} {...props} />\nexport const SizeIcon: React.FC = props => <Icon component={SizeSvg} {...props} />\nexport const LanguageIcon: React.FC = props => <Icon component={LanguageSvg} {...props} />\n","import * as antIcons from '@ant-design/icons'\nimport * as customIcons from '@/components/icons/CustomIcons'\n\nconst temp: { [key: string]: any } = { ...antIcons }\nconst icons: { [key: string]: any } = { ...customIcons }\n\nfor (const key in temp) {\n  if (typeof temp[key] !== 'function' && key !== 'default') {\n    icons[key] = temp[key]\n  }\n}\n\nexport default icons\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"menus_page__2WuPH\",\"page__header\":\"menus_page__header__23sH9\",\"menus__tree-select\":\"menus_menus__tree-select__821iN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"users_page__3yKWT\",\"page__header\":\"users_page__header__gEeA6\",\"users__tree-select\":\"users_users__tree-select__2nmjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons__item\":\"icons_icons__item__1XNLj\",\"icons\":\"icons_icons__3Eo_C\"};","import React from 'react'\n\nconst Index: React.FC = () => {\n  return (\n    <div>\n      <h1 style={{\n        textAlign: 'center',\n        marginTop: 100\n      }}>Hello&nbsp;World&nbsp;&nbsp;(&nbsp;:</h1>\n    </div>\n  )\n}\n\nexport default Index\n","import http from '@/api/http'\nimport { RequestApiFn } from '@/api/types'\n\n// 获取用户列表\nexport const getUserList: RequestApiFn = (data, config) => {\n  const url: string = '/users/getUserList'\n  return http.post(url, data, config)\n}\n\n// 添加用户\nexport const addUser: RequestApiFn = (data, config) => {\n  const url: string = '/users/addUser'\n  return http.post(url, data, config)\n}\n\n// 更新用户\nexport const updateUser: RequestApiFn = (data, config) => {\n  const url: string = '/users/updateUser'\n  return http.post(url, data, config)\n}\n\n// 删除用户\nexport const removeUser: RequestApiFn = (data, config) => {\n  const url: string = '/users/removeUser'\n  return http.post(url, data, config)\n}\n\n// 获取所有角色\nexport const getAllRole: RequestApiFn = (data, config) => {\n  const url: string = '/role/getAllRole'\n  return http.post(url, data, config)\n}\n","import React, {\n  useState,\n  useEffect\n} from 'react'\nimport * as api from './api'\nimport { useIntl } from 'react-intl'\nimport { Rule } from 'antd/es/form'\nimport { Modal, Form, Input, Select } from 'antd'\n\ninterface FormValues {\n  id?: string\n  role?: string\n  email?: string\n  username?: string\n}\n\ninterface CreateFormProps {\n  user?: any\n  modalVisible: boolean\n  onCancel: () => void\n  onSuccess: () => void\n}\n\nconst CreateForm: React.FC<CreateFormProps> = (props) => {\n  const intl = useIntl()\n  const { user, modalVisible, onCancel, onSuccess } = props\n  const [roles, setRoles] = useState([])\n  const [title, setTitle] = useState<string>(intl.formatMessage({ id: 'add' }))\n  const [form] = Form.useForm()\n  const nameRule: Rule[] = [\n    {\n      required: true\n    }\n  ]\n  useEffect(() => {\n    api.getAllRole().then(({ success, data }) => {\n      if (success) setRoles(data)\n    })\n  }, [])\n  useEffect(toggleVisible, [modalVisible, user])\n\n  function toggleVisible() {\n    if (user) {\n      form.setFieldsValue({\n        ...user,\n        role: user.role?.id\n      })\n      setTitle(intl.formatMessage({ id: 'update' }))\n    } else {\n      form.resetFields()\n      setTitle(intl.formatMessage({ id: 'add' }))\n    }\n  }\n\n  function onFinish(values: FormValues) {\n    console.log(values)\n    if (values.id) {\n      api.updateUser(values).then(({ success }) => {\n        if (success) {\n          onSuccess()\n          onCancel()\n        }\n      })\n    } else {\n      api.addUser(values).then(({ success }) => {\n        if (success) {\n          onSuccess()\n          onCancel()\n        }\n      })\n    }\n  }\n\n  function filterOption(input: any, option: any) {\n    return !!~option.children.indexOf(input)\n  }\n\n  return (\n    <Modal\n      title={title}\n      onOk={() => form.submit()}\n      visible={modalVisible}\n      onCancel={onCancel}\n      maskClosable={false}\n      destroyOnClose\n    >\n      <Form\n        name=\"menu\"\n        form={form}\n        labelCol={{ span: 4 }}\n        onFinish={v => onFinish(v as FormValues)}\n      >\n        <Form.Item name=\"id\" noStyle>\n          <Input hidden type=\"text\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"username\"\n          rules={nameRule}\n          label=\"用户名\">\n          <Input readOnly={!!user} maxLength={16} placeholder={intl.formatMessage({ id: 'menu.name' })}/>\n        </Form.Item>\n        <Form.Item name=\"email\" label=\"邮箱\" rules={nameRule}>\n          <Input maxLength={16} placeholder={intl.formatMessage({ id: 'menu.path' })}/>\n        </Form.Item>\n        <Form.Item name=\"role\" label=\"角色\">\n          <Select\n            showSearch\n            placeholder=\"请选择\"\n            optionFilterProp=\"children\"\n            filterOption={filterOption}\n          >\n            {\n              roles.map((item: any) => (\n                <Select.Option key={item.id} value={item.id}>{item.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default CreateForm\n","import React, { useEffect, useState } from 'react'\nimport classNames from 'classnames/bind'\nimport { Table, Button, Space, Divider, Popconfirm, Pagination } from 'antd'\nimport { ColumnsType } from 'antd/es/table'\nimport { PlusOutlined } from '@ant-design/icons'\nimport * as api from './api'\nimport moment from 'moment'\nimport { useIntl } from 'react-intl'\nimport scss from './index.module.scss'\nimport CreateForm from './CreateForm'\n\nconst cx = classNames.bind(scss)\n\ninterface UserItem {\n  id: string\n  role?: { [key: string]: any }\n  email: string\n  created: string\n  updated: string\n  username: string\n  lastLoginDate: string\n}\n\ninterface Pagination {\n  total: number,\n  current: number,\n  pageSize: number,\n}\n\nconst Index: React.FC = () => {\n  const intl = useIntl()\n  const [user, setUser] = useState<UserItem | null>(null)\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\n  const [pagination, setPagination] = useState<Pagination>({\n    total: 0,\n    current: 1,\n    pageSize: 10\n  })\n  const [userList, setUserList] = useState<UserItem[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const columns: ColumnsType<UserItem> = [\n    {\n      title: '用户名',\n      dataIndex: 'username'\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email'\n    },\n    {\n      title: '角色',\n      dataIndex: 'role',\n      render(text) {\n        return text && text.name\n      }\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'created',\n      render(text) {\n        return moment(text).format('YYYY-MM-DD hh:mm:ss')\n      }\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'updated',\n      render(text) {\n        return moment(text).format('YYYY-MM-DD hh:mm:ss')\n      }\n    },\n    {\n      title: '最后登录时间',\n      dataIndex: 'lastLoginDate',\n      render(text) {\n        return moment(text).format('YYYY-MM-DD hh:mm:ss')\n      }\n    },\n    {\n      title: '操作',\n      key: 'action',\n      width: '20%',\n      render(text, record) {\n        return (\n          <>\n            <a onClick={() => updateUser(record)} href=\"javascript:void (0);\">\n              {intl.formatMessage({ id: 'update' })}\n            </a>\n            <Divider type=\"vertical\"/>\n            <Popconfirm\n              title={intl.formatMessage({ id: 'deleteTips' })}\n              onConfirm={() => removeMenu(record)}\n            >\n              <a href=\"javascript:void (0);\">\n                {intl.formatMessage({ id: 'delete' })}\n              </a>\n            </Popconfirm>\n          </>\n        )\n      }\n    }\n  ]\n\n  useEffect(getUserList, [])\n\n  function updateUser(record: UserItem) {\n    setUser(record)\n    setModalVisible(true)\n  }\n\n  function addUser() {\n    setUser(null)\n    setModalVisible(true)\n  }\n\n  function getUserList(params = {}) {\n    params = {\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      ...params\n    }\n    setLoading(true)\n    api.getUserList(params).then(({ success, data }) => {\n      if (success) {\n        setPagination({\n          total: data.total,\n          current: data.page,\n          pageSize: data.pageSize\n        })\n        setUserList(data.rows)\n      }\n      setLoading(false)\n    })\n  }\n\n  function onChange(pagination: any) {\n    getUserList({\n      page: pagination.current,\n      pageSize: pagination.pageSize\n    })\n  }\n\n  function removeMenu(record: UserItem): void {\n    api.removeUser({ id: record.id }).then(({ success }) => {\n      success && getUserList()\n    })\n  }\n\n  return (\n    <div className={cx('users', 'page')}>\n      <Space align=\"center\" className={cx('page__header')}>\n        <Button onClick={addUser} type=\"primary\" icon={<PlusOutlined/>}>\n          {intl.formatMessage({ id: 'add' })}\n        </Button>\n      </Space>\n      <Table\n        rowKey='id'\n        loading={loading}\n        pagination={{\n          ...pagination,\n          showTotal: total => `共 ${total} 条`\n        }}\n        onChange={onChange}\n        columns={columns}\n        defaultExpandAllRows\n        dataSource={userList}/>\n      <CreateForm\n        user={user}\n        modalVisible={modalVisible}\n        onSuccess={() => getUserList()}\n        onCancel={() => setModalVisible(false)}/>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport classNames from 'classnames/bind'\nimport { Modal, Button } from 'antd'\nimport icons from '@/utils/icons'\nimport scss from './icons.module.scss'\n\nconst cx = classNames.bind(scss)\n\ninterface IconsProps {\n  modalVisible: boolean\n  onCancel: () => void\n  selectedIcon: (icon: string) => void\n}\n\nconst IconsDialog: React.FC<IconsProps> = (props) => {\n  const { modalVisible, onCancel, selectedIcon } = props\n  const iconList = []\n  for (const key in icons) {\n    iconList.push({\n      name: key,\n      icon: icons[key]\n    })\n  }\n\n  return (\n    <Modal\n      width=\"50%\"\n      title=\"icons\"\n      destroyOnClose\n      visible={modalVisible}\n      onCancel={onCancel}\n      footer={null}\n      className={cx('icons')}\n    >\n      <div>\n        {\n          iconList.map((item, index) => (\n            <Button onClick={() => selectedIcon(item.name)} className={cx('icons__item')} type=\"text\" key={index}>\n              <item.icon/>\n            </Button>\n          ))\n        }\n      </div>\n    </Modal>\n  )\n}\n\nexport default IconsDialog\n","import React, {\n  useState,\n  useEffect\n} from 'react'\nimport api from '@/api'\nimport { useIntl } from 'react-intl'\nimport { Rule } from 'antd/es/form'\nimport icons from '@/utils/icons'\nimport classNames from 'classnames/bind'\nimport { MenuItem } from '@/store/types'\nimport IconsDialog from '@/components/icons/IconsDialog'\nimport { Button, Modal, Form, Input, InputNumber, Col, Row, TreeSelect } from 'antd'\nimport scss from './index.module.scss'\n\nconst cx = classNames.bind(scss)\nconst { TreeNode } = TreeSelect\n\ninterface FormValues {\n  id?: string\n  path?: string\n  icon?: string\n  name: string\n  sort: number\n  parent?: string | null\n}\n\ninterface CreateFormProps {\n  menu?: any\n  menus: MenuItem[]\n  modalVisible: boolean\n  onCancel: () => void\n  onSuccess: () => void\n}\n\nconst CreateForm: React.FC<CreateFormProps> = (props) => {\n  const intl = useIntl()\n  const { menu, menus, modalVisible, onCancel, onSuccess } = props\n  const [icon, setIcon] = useState<string>('')\n  const [title, setTitle] = useState<string>(intl.formatMessage({ id: 'add' }))\n  const [visible, setVisible] = useState<boolean>(false)\n  const [form] = Form.useForm()\n  const SelectedIcon = icons[icon]\n  const initialValues: FormValues = {\n    name: '',\n    sort: 1\n  }\n  const nameRule: Rule[] = [\n    {\n      required: true\n    }\n  ]\n  const sortRule: Rule[] = [\n    { required: true },\n    {\n      min: 1,\n      type: 'number'\n    }\n  ]\n\n  useEffect(toggleVisible, [modalVisible, menu])\n\n  function toggleVisible() {\n    if (menu) {\n      menu.parent = menu.parent || undefined\n      setIcon(menu.icon)\n      form.setFieldsValue(menu)\n      setTitle(intl.formatMessage({ id: 'update' }))\n    } else {\n      setIcon('')\n      form.resetFields()\n      setTitle(intl.formatMessage({ id: 'add' }))\n    }\n  }\n\n  function renderTreeNode(item: MenuItem, disabled?: boolean): React.ReactNode {\n    disabled = disabled || menu?.id === item.id\n    const Icon = item.icon && icons[item.icon]\n    return (\n      <TreeNode\n        key={item.id}\n        value={item.id}\n        title={item.name}\n        disabled={disabled}\n        icon={item.icon && <Icon/>}\n      >\n        {\n          item.children.map(item => renderTreeNode(item, disabled))\n        }\n      </TreeNode>\n    )\n  }\n\n  function onFinish(values: FormValues) {\n    values.parent = values.parent || null\n    if (values.id) {\n      api.updateMenu(values).then(({ success }) => success && onSuccess())\n    } else {\n      api.addMenu(values).then(({ success }) => success && onSuccess())\n    }\n  }\n\n  function selectedIcon(icon: string) {\n    setIcon(icon)\n    setVisible(false)\n    form.setFieldsValue({ icon })\n  }\n\n  return (\n    <Modal\n      title={title}\n      onOk={() => form.submit()}\n      visible={modalVisible}\n      onCancel={onCancel}\n      maskClosable={false}\n      destroyOnClose\n    >\n      <Form\n        name=\"menu\"\n        form={form}\n        labelCol={{ span: 4 }}\n        initialValues={initialValues}\n        onFinish={v => onFinish(v as FormValues)}\n      >\n        <Form.Item name=\"id\" noStyle>\n          <Input hidden type=\"text\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"name\"\n          rules={nameRule}\n          label={intl.formatMessage({ id: 'menu.name' })}>\n          <Input maxLength={16} placeholder={intl.formatMessage({ id: 'menu.name' })}/>\n        </Form.Item>\n        <Form.Item name=\"path\" label={intl.formatMessage({ id: 'menu.path' })}>\n          <Input maxLength={16} placeholder={intl.formatMessage({ id: 'menu.path' })}/>\n        </Form.Item>\n        <Form.Item name=\"parent\" label={intl.formatMessage({ id: 'menu.parent' })}>\n          <TreeSelect\n            allowClear\n            treeIcon\n            value={initialValues.parent}\n            dropdownStyle={{\n              maxHeight: 400,\n              overflow: 'auto'\n            }}\n            placeholder={intl.formatMessage({ id: 'select' })}\n            className={cx('menus__tree-select')}\n            onChange={v => form.setFieldsValue({ parent: v })}\n          >\n            {menus.map(item => renderTreeNode(item))}\n          </TreeSelect>\n        </Form.Item>\n        <Row>\n          <Col span={12}>\n            <Form.Item\n              name=\"sort\"\n              rules={sortRule}\n              labelCol={{ span: 8 }}\n              label={intl.formatMessage({ id: 'menu.sort' })}\n            >\n              <InputNumber min={1} max={100000}/>\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item labelCol={{ span: 8 }} label={intl.formatMessage({ id: 'menu.icon' })}>\n              <Form.Item name=\"icon\" noStyle>\n                <Button onClick={() => setVisible(true)} type=\"dashed\" shape=\"circle\">\n                  {icon ? <SelectedIcon/> : <span>&nbsp;</span>}\n                </Button>\n              </Form.Item>\n              {\n                icon &&\n                <a onClick={() => selectedIcon('')} style={{ marginLeft: 10 }} href=\"javascript:void (0);\">\n                  {intl.formatMessage({ id: 'delete' })}\n                </a>\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n      <IconsDialog selectedIcon={selectedIcon} modalVisible={visible} onCancel={() => setVisible(false)}/>\n    </Modal>\n  )\n}\n\nexport default CreateForm\n","import React, { useEffect, useMemo, useState } from 'react'\nimport classNames from 'classnames/bind'\nimport { Table, Button, Space, Divider, Popconfirm } from 'antd'\nimport { MenuItem } from '@/store/types'\nimport { ColumnsType } from 'antd/es/table'\nimport icons from '@/utils/icons'\nimport { PlusOutlined } from '@ant-design/icons'\nimport CreateForm from './CreateForm'\nimport api from '@/api'\nimport scss from './index.module.scss'\nimport { useIntl } from 'react-intl'\n\nconst cx = classNames.bind(scss)\n\ninterface MenuItemNoChildren extends Omit<MenuItem, 'children'> {\n  children?: MenuItemNoChildren[]\n}\n\nconst Index: React.FC = () => {\n  const intl = useIntl()\n  const [menu, setMenu] = useState<MenuItemNoChildren | null>(null)\n  const [menus, setMenus] = useState<MenuItem[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [visible, setVisible] = useState<boolean>(false)\n  const createFormProps = {\n    menu,\n    menus,\n    modalVisible: visible,\n    onSuccess: getMenus,\n    onCancel: () => setVisible(false)\n  }\n  const columns: ColumnsType<MenuItemNoChildren> = [\n    {\n      title: intl.formatMessage({ id: 'menu.name' }),\n      dataIndex: 'name'\n    },\n    {\n      title: intl.formatMessage({ id: 'menu.path' }),\n      dataIndex: 'path',\n      width: '20%'\n    },\n    {\n      title: intl.formatMessage({ id: 'menu.icon' }),\n      dataIndex: 'icon',\n      width: '20%',\n      render(text) {\n        const Icon = icons[text]\n        return (\n          <>\n            {text && <Icon style={{ marginRight: 4 }}/>}\n            <span>{text}</span>\n          </>\n        )\n      }\n    },\n    {\n      title: intl.formatMessage({ id: 'menu.sort' }),\n      dataIndex: 'sort',\n      width: '10%'\n    },\n    {\n      title: intl.formatMessage({ id: 'menu.action' }),\n      key: 'action',\n      width: '20%',\n      render(text, record) {\n        return (\n          <>\n            <a onClick={() => editMenu(record)} href=\"javascript:void (0);\">\n              {intl.formatMessage({ id: 'update' })}\n            </a>\n            <Divider type=\"vertical\"/>\n            <Popconfirm\n              title={intl.formatMessage({ id: 'deleteTips' })}\n              onConfirm={() => removeMenu(record)}\n            >\n              <a href=\"javascript:void (0);\">\n                {intl.formatMessage({ id: 'delete' })}\n              </a>\n            </Popconfirm>\n          </>\n        )\n      }\n    }\n  ]\n  // 删除Children空数组，ant-design的树表格会渲染空Children的展开图标\n  const noChildrenMenus = useMemo<MenuItemNoChildren[]>(() => {\n    return removeChildren(menus)\n\n    function removeChildren(menus: MenuItemNoChildren[]): MenuItemNoChildren[] {\n      return menus.map(({ ...item }) => {\n        if (item.children?.length) {\n          item.children = removeChildren(item.children)\n        } else {\n          delete item.children\n        }\n        return item\n      })\n    }\n  }, [menus])\n\n  useEffect(getMenus, [])\n\n  function getMenus() {\n    setLoading(true)\n    setVisible(false)\n    api.getMenus({ parent: null }).then(({ success, data }) => {\n      success && setMenus(data)\n      setLoading(false)\n    })\n  }\n\n  function addMenu() {\n    setMenu(null)\n    setVisible(true)\n  }\n\n  function editMenu(record: MenuItemNoChildren) {\n    setMenu(record)\n    setVisible(true)\n  }\n\n  function removeMenu(record: MenuItemNoChildren): void {\n    api.removeMenu({ id: record.id }).then(({ success }) => {\n      success && getMenus()\n    })\n  }\n\n  return (\n    <div className={cx('menu', 'page')}>\n      <Space align=\"center\" className={cx('page__header')}>\n        <Button onClick={addMenu} type=\"primary\" icon={<PlusOutlined/>}>\n          {intl.formatMessage({ id: 'add' })}\n        </Button>\n      </Space>\n      <Table\n        rowKey='id'\n        loading={loading}\n        pagination={false}\n        columns={columns}\n        defaultExpandAllRows\n        dataSource={noChildrenMenus}\n      />\n      <CreateForm {...createFormProps}/>\n    </div>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}